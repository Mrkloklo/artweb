{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujiahao/Documents/work/github/artweb/src/components/stepper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/components/stepper.vue","mtime":1588230106533},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js","mtime":1585810053320}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Stepper } from 'vant';\n\nexport default {\n  name: 'Stepper',\n  components: {\n    [Stepper.name]: Stepper\n  },\n  model: {\n    prop: 'value',\n    event: 'changeValue'\n  },\n  props: {\n    min: {\n      type: [String, Number],\n      default: 1\n    },\n    max: [String, Number],\n    step: {\n      type: [String, Number],\n      default: 1\n    },\n    integer: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    disableInput: {\n      type: Boolean,\n      default: false\n    },\n    asyncChange: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: [Number, String],\n      default: 1\n    },\n    inputWidth: {\n      type: String,\n      default: '30px'\n    }\n  },\n  data () {\n    return {\n      stepperValue: 1\n    };\n  },\n  methods: {\n    onChange (value) {\n      this.$emit('change', value);\n      this.$emit('changeValue', value);\n    },\n    onOverlimit () {\n      this.$emit('overlimit');\n    },\n    onPlus () {\n      this.$emit('plus');\n    },\n    onMinus () {\n      this.$emit('minus');\n    },\n    onFoucs () {\n      this.$emit('focus');\n    },\n    onBlur () {\n      this.$emit('blur');\n    }\n  },\n  created () {\n    this.stepperValue = this.value;\n  }\n};\n",{"version":3,"sources":["stepper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"stepper.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <van-stepper\n    v-model=\"stepperValue\"\n    :min=\"min\"\n    :max=\"max\"\n    :step=\"step\"\n    :integer=\"integer\"\n    :disabled=\"disabled\"\n    :disable-input=\"disableInput\"\n    :async-change=\"asyncChange\"\n    :input-width=\"inputWidth\"\n    @change=\"onChange\"\n    @overlimit=\"onOverlimit\"\n    @plus=\"onPlus\"\n    @minus=\"onMinus\"\n    @focus=\"onFoucs\"\n    @blur=\"onBlur\"\n  ></van-stepper>\n</template>\n\n<script>\nimport { Stepper } from 'vant';\n\nexport default {\n  name: 'Stepper',\n  components: {\n    [Stepper.name]: Stepper\n  },\n  model: {\n    prop: 'value',\n    event: 'changeValue'\n  },\n  props: {\n    min: {\n      type: [String, Number],\n      default: 1\n    },\n    max: [String, Number],\n    step: {\n      type: [String, Number],\n      default: 1\n    },\n    integer: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    disableInput: {\n      type: Boolean,\n      default: false\n    },\n    asyncChange: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: [Number, String],\n      default: 1\n    },\n    inputWidth: {\n      type: String,\n      default: '30px'\n    }\n  },\n  data () {\n    return {\n      stepperValue: 1\n    };\n  },\n  methods: {\n    onChange (value) {\n      this.$emit('change', value);\n      this.$emit('changeValue', value);\n    },\n    onOverlimit () {\n      this.$emit('overlimit');\n    },\n    onPlus () {\n      this.$emit('plus');\n    },\n    onMinus () {\n      this.$emit('minus');\n    },\n    onFoucs () {\n      this.$emit('focus');\n    },\n    onBlur () {\n      this.$emit('blur');\n    }\n  },\n  created () {\n    this.stepperValue = this.value;\n  }\n};\n</script>\n"]}]}