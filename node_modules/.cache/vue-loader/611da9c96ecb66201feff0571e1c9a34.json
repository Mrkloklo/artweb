{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujiahao/Documents/work/github/artweb/src/components/popup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/components/popup.vue","mtime":1588230106530},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js","mtime":1585810053320}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Popup } from 'vant';\n\nexport default {\n  name: 'Popup',\n  components: {\n    'van-popup': Popup\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  props: {\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    position: String,\n    overlayClass: String,\n    overlayStyle: String,\n    transition: String,\n    getContainer: {\n      default: null\n    },\n    closOnClickOverlay: {\n      type: Boolean,\n      default: true\n    },\n    lockScroll: {\n      type: Boolean,\n      default: true\n    },\n    lazyRender: {\n      type: Boolean,\n      default: true\n    },\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      visible: false\n    };\n  },\n  watch: {\n    show (value) {\n      this.visible = value;\n    }\n  },\n  methods: {\n    changeValue () {\n      this.$emit('change', this.visible);\n    },\n    onClickOpen () {\n      this.$emit('open');\n    },\n    onClickOpened () {\n      this.$emit('opened');\n    },\n    onClickClose () {\n      this.$emit('close');\n    },\n    onClickClosed () {\n      this.$emit('closed');\n    },\n    onClickOverlay () {\n      this.$emit('click-overlay');\n    }\n  },\n  created () {\n    this.visible = this.show;\n  }\n};\n",{"version":3,"sources":["popup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"popup.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <van-popup\n    v-model=\"visible\"\n    :position=\"position\"\n    :overlay=\"overlay\"\n    :overlay-class=\"overlayClass\"\n    :overlay-style=\"overlayStyle\"\n    :transition=\"transition\"\n    :get-container=\"getContainer\"\n    :close-on-click-overlay=\"closOnClickOverlay\"\n    :lock-scrol=\"lockScroll\"\n    :lazy-render=\"lazyRender\"\n    @input=\"changeValue\"\n    @open=\"onClickOpen\"\n    @opened=\"onClickOpened\"\n    @close=\"onClickClose\"\n    @closed=\"onClickClosed\"\n    @click-overlay=\"onClickOverlay\"\n  >\n    <slot></slot>\n  </van-popup>\n</template>\n\n<script>\nimport { Popup } from 'vant';\n\nexport default {\n  name: 'Popup',\n  components: {\n    'van-popup': Popup\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  props: {\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    position: String,\n    overlayClass: String,\n    overlayStyle: String,\n    transition: String,\n    getContainer: {\n      default: null\n    },\n    closOnClickOverlay: {\n      type: Boolean,\n      default: true\n    },\n    lockScroll: {\n      type: Boolean,\n      default: true\n    },\n    lazyRender: {\n      type: Boolean,\n      default: true\n    },\n    show: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      visible: false\n    };\n  },\n  watch: {\n    show (value) {\n      this.visible = value;\n    }\n  },\n  methods: {\n    changeValue () {\n      this.$emit('change', this.visible);\n    },\n    onClickOpen () {\n      this.$emit('open');\n    },\n    onClickOpened () {\n      this.$emit('opened');\n    },\n    onClickClose () {\n      this.$emit('close');\n    },\n    onClickClosed () {\n      this.$emit('closed');\n    },\n    onClickOverlay () {\n      this.$emit('click-overlay');\n    }\n  },\n  created () {\n    this.visible = this.show;\n  }\n};\n</script>\n"]}]}