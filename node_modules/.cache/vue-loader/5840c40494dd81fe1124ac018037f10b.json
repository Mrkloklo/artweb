{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujiahao/Documents/work/github/artweb/src/components/field.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/components/field.vue","mtime":1588230106486},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js","mtime":1585810053320}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Field } from 'vant';\n\nexport default {\n  name: 'Field',\n  components: {\n    [Field.name]: Field\n  },\n  model: {\n    prop: 'fieldValue',\n    event: 'changeFieldValue'\n  },\n  props: {\n    label: String,\n    value: [Number, String],\n    type: {\n      type: String,\n      default: 'text'\n    },\n    border: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    isLink: {\n      type: Boolean,\n      default: false\n    },\n    error: {\n      type: Boolean,\n      default: false\n    },\n    errorMessage: {\n      type: String,\n      default: ''\n    },\n    labelAlign: {\n      type: String,\n      default: 'left'\n    },\n    inputAlign: {\n      type: String,\n      default: 'left'\n    },\n    autosize: {\n      type: [Boolean, Object],\n      default () {\n        return false;\n      }\n    },\n    labelWidth: {\n      type: [String, Number],\n      default: '90px'\n    },\n    placeholder: String,\n    leftIcon: String,\n    rightIcon: String,\n    maxlength: Number,\n    autofocus: Boolean,\n    fieldValue: {\n      type: String,\n      default: ''\n    },\n    rows: [Number, String],\n    cols: [Number, String],\n    errorMessageAlign: {\n      type: String,\n      default: 'left'\n    }\n  },\n  data () {\n    return {\n      currentValue: null\n    };\n  },\n  methods: {\n    onInput () {\n      this.$emit('changeFieldValue', this.currentValue);\n      this.$emit('input');\n    },\n    onClear () {\n      this.$emit('changeFieldValue', '');\n      this.$emit('clear');\n    },\n    onClickLeftIcon () {\n      this.$emit('click-left-icon');\n    },\n    onClickRightIcon () {\n      this.$emit('click-right-icon');\n    },\n    focus () {\n      this.$refs.field.focus();\n    },\n    blur () {\n      this.$refs.field.blur();\n    }\n  },\n  created () {\n    this.currentValue = this.fieldValue;\n  }\n};\n",{"version":3,"sources":["field.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"field.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <van-field\n    v-model=\"currentValue\"\n    :label=\"label\"\n    :type=\"type\"\n    :value=\"value\"\n    :border=\"border\"\n    :disabled=\"disabled\"\n    :readonly=\"readonly\"\n    :clearable=\"clearable\"\n    :required=\"required\"\n    :is-link=\"isLink\"\n    :error=\"error\"\n    :error-message=\"errorMessage\"\n    :lbael-align=\"labelAlign\"\n    :input-align=\"inputAlign\"\n    :autosize=\"autosize\"\n    :left-icon=\"leftIcon\"\n    :right-icon=\"rightIcon\"\n    :label-width=\"labelWidth\"\n    :placeholder=\"placeholder\"\n    :maxlength=\"maxlength\"\n    :autofocus=\"autofocus\"\n    :rows=\"rows\"\n    :cols=\"cols\"\n    :error-message-align=\"errorMessageAlign\"\n    @input=\"onInput\"\n    @clear=\"onClear\"\n    @click-left-icon=\"onClickLeftIcon\"\n    @click-right-icon=\"onClickRightIcon\"\n    ref=\"field\"\n  >\n    <slot\n      name=\"label\"\n      slot=\"label\"\n    ></slot>\n    <slot\n      name=\"left-icon\"\n      slot=\"left-icon\"\n    ></slot>\n    <slot\n      name=\"right-icon\"\n      slot=\"right-icon\"\n    ></slot>\n    <slot\n      name=\"button\"\n      slot=\"button\"\n    ></slot>\n  </van-field>\n</template>\n\n<script>\nimport { Field } from 'vant';\n\nexport default {\n  name: 'Field',\n  components: {\n    [Field.name]: Field\n  },\n  model: {\n    prop: 'fieldValue',\n    event: 'changeFieldValue'\n  },\n  props: {\n    label: String,\n    value: [Number, String],\n    type: {\n      type: String,\n      default: 'text'\n    },\n    border: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    isLink: {\n      type: Boolean,\n      default: false\n    },\n    error: {\n      type: Boolean,\n      default: false\n    },\n    errorMessage: {\n      type: String,\n      default: ''\n    },\n    labelAlign: {\n      type: String,\n      default: 'left'\n    },\n    inputAlign: {\n      type: String,\n      default: 'left'\n    },\n    autosize: {\n      type: [Boolean, Object],\n      default () {\n        return false;\n      }\n    },\n    labelWidth: {\n      type: [String, Number],\n      default: '90px'\n    },\n    placeholder: String,\n    leftIcon: String,\n    rightIcon: String,\n    maxlength: Number,\n    autofocus: Boolean,\n    fieldValue: {\n      type: String,\n      default: ''\n    },\n    rows: [Number, String],\n    cols: [Number, String],\n    errorMessageAlign: {\n      type: String,\n      default: 'left'\n    }\n  },\n  data () {\n    return {\n      currentValue: null\n    };\n  },\n  methods: {\n    onInput () {\n      this.$emit('changeFieldValue', this.currentValue);\n      this.$emit('input');\n    },\n    onClear () {\n      this.$emit('changeFieldValue', '');\n      this.$emit('clear');\n    },\n    onClickLeftIcon () {\n      this.$emit('click-left-icon');\n    },\n    onClickRightIcon () {\n      this.$emit('click-right-icon');\n    },\n    focus () {\n      this.$refs.field.focus();\n    },\n    blur () {\n      this.$refs.field.blur();\n    }\n  },\n  created () {\n    this.currentValue = this.fieldValue;\n  }\n};\n</script>\n"]}]}