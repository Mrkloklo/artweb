{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujiahao/Documents/work/github/artweb/src/showcase/minirefresh.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/showcase/minirefresh.vue","mtime":1588230106616},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js","mtime":1585810053320}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport vanHeader from '@components/header';\nimport vanCell from '@components/cell';\nimport 'minirefresh';\nimport 'minirefresh/dist/debug/minirefresh.css';\nimport Util from '@utils';\n\nconst Console = console;\n\nexport default {\n  name: 'Pulltorefresh',\n  components: {\n    vanHeader,\n    vanCell\n  },\n  data() {\n    return {\n      miniRefresh: null,\n      listdata: [],\n      requestDelayTime: 600,\n      pageindex: 0\n    };\n  },\n  methods: {\n    requestAjax(eventType) {\n      if (eventType === 'down') {\n        this.pageindex = 0;\n      }\n\n      Util.ajax({\n        url: 'http://115.29.151.25:8012/request.php?action=testV7List',\n        data: JSON.stringify({\n          token: 'RXBvaW50X1dlYlNlcml2Y2VfKiojIzA2MDE=',\n          params: {\n            pageindex: this.pageindex++,\n            pagesize: 10,\n            keyword: 'type1'\n          }\n        }),\n        success: ({ custom }) => {\n          const infolist = custom.infolist || [];\n          const len = infolist.length;\n          const miniRefresh = this.miniRefresh;\n\n          if (len > 0) {\n            setTimeout(() => {\n              if (eventType === 'down') {\n                this.listdata = infolist;\n                miniRefresh.endDownLoading(true);\n              } else {\n                infolist.forEach(e => {\n                  this.listdata.push(e);\n                });\n                miniRefresh.endUpLoading(false);\n              }\n            }, this.requestDelayTime);\n          } else {\n            if (eventType === 'down') {\n              this.listdata = [];\n              miniRefresh.endDownLoading(true);\n            } else {\n              miniRefresh.endUpLoading(true);\n            }\n          }\n        },\n        error: err => {\n          Console.error(err);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.miniRefresh = new MiniRefresh({\n      container: '#minirefresh',\n      down: {\n        callback: () => {\n          this.requestAjax('down');\n        }\n      },\n      up: {\n        isAuto: true,\n        callback: () => {\n          this.requestAjax('up');\n        }\n      }\n    });\n  }\n};\n",{"version":3,"sources":["minirefresh.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"minirefresh.vue","sourceRoot":"src/showcase","sourcesContent":["<template>\n  <div class=\"container\">\n    <van-header\n      title=\"Pulltorefresh 下拉刷新\"\n      left-arrow\n    ></van-header>\n    <div class=\"van-content\">\n      <div\n        id=\"minirefresh\"\n        class=\"minirefresh-wrap\"\n      >\n        <div class=\"minirefresh-scroll\">\n          <div\n            class=\"data-list\"\n            ref=\"listdata\"\n          >\n            <van-cell\n              v-for=\"(item, index) in listdata\"\n              :key=\"index\"\n              :title=\"item.title\"\n              :label=\"`描述信息${index}`\"\n            >{{ item.date }}</van-cell>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport vanHeader from '@components/header';\nimport vanCell from '@components/cell';\nimport 'minirefresh';\nimport 'minirefresh/dist/debug/minirefresh.css';\nimport Util from '@utils';\n\nconst Console = console;\n\nexport default {\n  name: 'Pulltorefresh',\n  components: {\n    vanHeader,\n    vanCell\n  },\n  data() {\n    return {\n      miniRefresh: null,\n      listdata: [],\n      requestDelayTime: 600,\n      pageindex: 0\n    };\n  },\n  methods: {\n    requestAjax(eventType) {\n      if (eventType === 'down') {\n        this.pageindex = 0;\n      }\n\n      Util.ajax({\n        url: 'http://115.29.151.25:8012/request.php?action=testV7List',\n        data: JSON.stringify({\n          token: 'RXBvaW50X1dlYlNlcml2Y2VfKiojIzA2MDE=',\n          params: {\n            pageindex: this.pageindex++,\n            pagesize: 10,\n            keyword: 'type1'\n          }\n        }),\n        success: ({ custom }) => {\n          const infolist = custom.infolist || [];\n          const len = infolist.length;\n          const miniRefresh = this.miniRefresh;\n\n          if (len > 0) {\n            setTimeout(() => {\n              if (eventType === 'down') {\n                this.listdata = infolist;\n                miniRefresh.endDownLoading(true);\n              } else {\n                infolist.forEach(e => {\n                  this.listdata.push(e);\n                });\n                miniRefresh.endUpLoading(false);\n              }\n            }, this.requestDelayTime);\n          } else {\n            if (eventType === 'down') {\n              this.listdata = [];\n              miniRefresh.endDownLoading(true);\n            } else {\n              miniRefresh.endUpLoading(true);\n            }\n          }\n        },\n        error: err => {\n          Console.error(err);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.miniRefresh = new MiniRefresh({\n      container: '#minirefresh',\n      down: {\n        callback: () => {\n          this.requestAjax('down');\n        }\n      },\n      up: {\n        isAuto: true,\n        callback: () => {\n          this.requestAjax('up');\n        }\n      }\n    });\n  }\n};\n</script>\n"]}]}