{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujiahao/Documents/work/github/artweb/src/components/datepicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/components/datepicker.vue","mtime":1588230106483},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js","mtime":1585810053320}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { DatetimePicker } from 'vant';\nimport vanPopup from './popup';\n\nexport default {\n  name: 'DatetimePicker',\n  components: {\n    [DatetimePicker.name]: DatetimePicker,\n    vanPopup\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  props: {\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    overlayClass: String,\n    overlayStyle: Object,\n    transition: String,\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: true\n    },\n    lockScroll: {\n      type: Boolean,\n      default: true\n    },\n    lazyRender: {\n      type: Boolean,\n      default: true\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'datetime'\n    },\n    minDate: {\n      type: Date,\n      default () {\n        const today = new Date();\n        const year = today.getFullYear();\n\n        return new Date(`${year - 10}-01-01`);\n      }\n    },\n    maxDate: {\n      type: Date,\n      default () {\n        const today = new Date();\n        const year = today.getFullYear();\n\n        return new Date(`${year + 10}-01-01`);\n      }\n    },\n    minHour: {\n      type: Number,\n      default: 0\n    },\n    maxHour: {\n      type: Number,\n      default: 23\n    },\n    minMinute: {\n      type: Number,\n      default: 0\n    },\n    maxMinute: {\n      type: Number,\n      default: 59\n    },\n    formatter: null,\n    title: String,\n    showToolbar: {\n      type: Boolean,\n      default: true\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    itemHeight: {\n      type: Number,\n      default: 44\n    },\n    currentDate: {\n      default () {\n        return this.type === 'time' ? '00:00' : new Date();\n      }\n    },\n    confirmButtonText: {\n      type: String,\n      default: '确认'\n    },\n    cancelButtonText: {\n      type: String,\n      default: '取消'\n    },\n    visibleItemCount: {\n      type: Number,\n      default: 5\n    }\n  },\n  watch: {\n    show (value) {\n      this.showPopup = value;\n    }\n  },\n  data () {\n    return {\n      showPopup: false,\n      date: null\n    };\n  },\n  methods: {\n    changePopupValue () {\n      this.$emit('change', this.showPopup);\n    },\n    onConfirm (value) {\n      const { appendZero } = this;\n      const { type } = this;\n\n      this.showPopup = false;\n      if (type === 'datetime') {\n        this.$emit('confirm', `${appendZero(value.getFullYear())}-${appendZero(value.getMonth() + 1)}-${appendZero(value.getDate())} ${appendZero(value.getHours())}:${appendZero(value.getMinutes())}`);\n      } else if (type === 'date') {\n        this.$emit('confirm', `${appendZero(value.getFullYear())}-${appendZero(value.getMonth() + 1)}-${appendZero(value.getDate())}`);\n      } else if (type === 'year-month') {\n        this.$emit('confirm', `${appendZero(value.getFullYear())}-${appendZero(value.getMonth() + 1)}`);\n      } else if (type === 'time') {\n        this.$emit('confirm', value);\n      }\n    },\n    onCancel () {\n      this.showPopup = false;\n      this.$emit('cancel');\n    },\n    onChange (picker) {\n      this.$emit('changepicker', picker);\n    },\n    appendZero (value) {\n      return value < 10 ? `0${value}` : value;\n    }\n  },\n  created () {\n    this.showPopup = this.show;\n    this.date = this.currentDate;\n  }\n};\n",{"version":3,"sources":["datepicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"datepicker.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <van-popup\n    v-model=\"showPopup\"\n    position=\"bottom\"\n    :overlay=\"overlay\"\n    :overlay-class=\"overlayClass\"\n    :overlay-style=\"overlayStyle\"\n    :transition=\"transition\"\n    :close-on-click-overlay=\"closeOnClickOverlay\"\n    :lock-scroll=\"lockScroll\"\n    :lazy-rende=\"lazyRender\"\n    @change=\"changePopupValue\"\n  >\n    <van-datetime-picker\n      v-model=\"date\"\n      :type=\"type\"\n      :min-date=\"minDate\"\n      :max-date=\"maxDate\"\n      :min-hour=\"minHour\"\n      :max-hour=\"maxHour\"\n      :min-minute=\"minMinute\"\n      :max-minute=\"maxMinute\"\n      :formatter=\"formatter\"\n      :title=\"title\"\n      :show-toolbar=\"showToolbar\"\n      :loading=\"loading\"\n      :item-height=\"itemHeight\"\n      :confirm-button-text=\"confirmButtonText\"\n      :cancel-button-text=\"cancelButtonText\"\n      :visible-item-count=\"visibleItemCount\"\n      @confirm=\"onConfirm\"\n      @cancel=\"onCancel\"\n      @change=\"onChange\"\n    ></van-datetime-picker>\n  </van-popup>\n</template>\n\n<script>\nimport { DatetimePicker } from 'vant';\nimport vanPopup from './popup';\n\nexport default {\n  name: 'DatetimePicker',\n  components: {\n    [DatetimePicker.name]: DatetimePicker,\n    vanPopup\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  props: {\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    overlayClass: String,\n    overlayStyle: Object,\n    transition: String,\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: true\n    },\n    lockScroll: {\n      type: Boolean,\n      default: true\n    },\n    lazyRender: {\n      type: Boolean,\n      default: true\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'datetime'\n    },\n    minDate: {\n      type: Date,\n      default () {\n        const today = new Date();\n        const year = today.getFullYear();\n\n        return new Date(`${year - 10}-01-01`);\n      }\n    },\n    maxDate: {\n      type: Date,\n      default () {\n        const today = new Date();\n        const year = today.getFullYear();\n\n        return new Date(`${year + 10}-01-01`);\n      }\n    },\n    minHour: {\n      type: Number,\n      default: 0\n    },\n    maxHour: {\n      type: Number,\n      default: 23\n    },\n    minMinute: {\n      type: Number,\n      default: 0\n    },\n    maxMinute: {\n      type: Number,\n      default: 59\n    },\n    formatter: null,\n    title: String,\n    showToolbar: {\n      type: Boolean,\n      default: true\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    itemHeight: {\n      type: Number,\n      default: 44\n    },\n    currentDate: {\n      default () {\n        return this.type === 'time' ? '00:00' : new Date();\n      }\n    },\n    confirmButtonText: {\n      type: String,\n      default: '确认'\n    },\n    cancelButtonText: {\n      type: String,\n      default: '取消'\n    },\n    visibleItemCount: {\n      type: Number,\n      default: 5\n    }\n  },\n  watch: {\n    show (value) {\n      this.showPopup = value;\n    }\n  },\n  data () {\n    return {\n      showPopup: false,\n      date: null\n    };\n  },\n  methods: {\n    changePopupValue () {\n      this.$emit('change', this.showPopup);\n    },\n    onConfirm (value) {\n      const { appendZero } = this;\n      const { type } = this;\n\n      this.showPopup = false;\n      if (type === 'datetime') {\n        this.$emit('confirm', `${appendZero(value.getFullYear())}-${appendZero(value.getMonth() + 1)}-${appendZero(value.getDate())} ${appendZero(value.getHours())}:${appendZero(value.getMinutes())}`);\n      } else if (type === 'date') {\n        this.$emit('confirm', `${appendZero(value.getFullYear())}-${appendZero(value.getMonth() + 1)}-${appendZero(value.getDate())}`);\n      } else if (type === 'year-month') {\n        this.$emit('confirm', `${appendZero(value.getFullYear())}-${appendZero(value.getMonth() + 1)}`);\n      } else if (type === 'time') {\n        this.$emit('confirm', value);\n      }\n    },\n    onCancel () {\n      this.showPopup = false;\n      this.$emit('cancel');\n    },\n    onChange (picker) {\n      this.$emit('changepicker', picker);\n    },\n    appendZero (value) {\n      return value < 10 ? `0${value}` : value;\n    }\n  },\n  created () {\n    this.showPopup = this.show;\n    this.date = this.currentDate;\n  }\n};\n</script>\n"]}]}