{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujiahao/Documents/work/github/artweb/src/components/easycalendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/components/easycalendar.vue","mtime":1588230106484},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js","mtime":1585810053320}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'Easycalendar',\n  model: {\n    prop: 'isShow',\n    event: 'changeVisible'\n  },\n  props: {\n    isShow: {\n      type: Boolean,\n      default: true\n    },\n    cls: {\n      type: String,\n      default: 'cur'\n    }\n  },\n  data () {\n    return {\n      year: null,\n      month: null,\n      day: null,\n      show: this.isShow,\n      result: {}\n    };\n  },\n  watch: {\n    isShow (value) {\n      this.show = value;\n    }\n  },\n  methods: {\n    /**\n     * 创建日期插件\n     * @param {Number} year 年\n     * @param {Number} month 月\n     * @param {Number} day 日\n     */\n    createCalendar (year, month, day) {\n      const today = this._getNowDay();\n\n      if (!year) {\n        year = today.getFullYear();\n      }\n\n      if (!day) {\n        day = today.getDate();\n      }\n\n      if (month === undefined) {\n        month = today.getMonth();\n      } else {\n        month -= 1;\n\n        if (month < 0) {\n          month = 11;\n        } else if (month > 11) {\n          month = 0;\n        }\n      }\n\n      const todayDate = new Date(year, month, 1);\n      const todayYear = todayDate.getFullYear();\n      const todayMonth = todayDate.getMonth() + 1;\n      let todayDateOfWeek = todayDate.getDay();\n\n      const preDate = new Date(year, month, 0);\n      const preYear = preDate.getFullYear();\n      const preMonth = preDate.getMonth() + 1;\n      const preDateOfMonth = preDate.getDate();\n\n      const lastDate = new Date(year, month + 1, 0);\n      const lastDateOfMonth = lastDate.getDate();\n\n      const nextDate = new Date(year, month + 1, 1);\n      const nextYear = nextDate.getFullYear();\n      const nextMonth = nextDate.getMonth() + 1;\n\n      if (day > lastDateOfMonth) {\n        throw new Error(`当前传入天数，超出本月应有天数，本月只有：${lastDateOfMonth}天`);\n      }\n\n      // 0 - 6 0代表星期天，修改一下\n      if (todayDateOfWeek === 0) {\n        todayDateOfWeek = 7;\n      }\n\n      const preDayOfCount = todayDateOfWeek - 1;\n      const result = [];\n      let _year = 0;\n      let _month = 0;\n      let _day = 0;\n      let cls = '';\n      let dayCls = '';\n      let index = 0;\n\n      for (let i = 0, len = 42; i < len; i++) {\n        index = i - preDayOfCount;\n\n        if (index < 0) {\n          _year = preYear;\n          _month = preMonth;\n          _day = preDateOfMonth + index + 1;\n          cls = 'exceed';\n        }\n\n        if (index >= 0 && index < lastDateOfMonth) {\n          _year = todayYear;\n          _month = todayMonth;\n          _day = index + 1;\n          cls = '';\n        }\n\n        if (index >= lastDateOfMonth) {\n          _year = nextYear;\n          _month = nextMonth;\n          _day = index - lastDateOfMonth + 1;\n          cls = 'exceed';\n        }\n\n        if (_month === todayMonth && _year === todayYear && _day === day) {\n          dayCls = this.cls;\n        } else {\n          dayCls = '';\n        }\n\n        result.push({\n          year: _year,\n          month: _month,\n          day: _day,\n          cls,\n          dayCls\n        });\n      }\n\n      this.$refs.date.innerHTML = `${todayYear}-${this.appendZero(todayMonth)}`;\n      this.year = todayYear;\n      this.month = todayMonth;\n      this.day = day;\n      this.result = {\n        year: todayYear.toString(),\n        month: todayMonth.toString(),\n        day: day.toString()\n      };\n      this.$emit('change', this.result);\n      this._renderCalendar(result);\n    },\n\n    /**\n     * 渲染日期\n     * @param {String} dateCollection 日期集合\n     */\n    _renderCalendar (dateCollection) {\n      let result = '';\n\n      for (let i = 1, len = dateCollection.length; i <= len; i++) {\n        const item = dateCollection[i - 1];\n\n        if (i === 1) {\n          result += `<tr><td class=\"${item.cls} ${item.dayCls}\" data-year=\"${item.year}\" data-month=\"${item.month}\">${item.day}</td>`;\n        } else if (i % 7 === 0) {\n          result += `<td class=\"${item.cls} ${item.dayCls}\" data-year=\"${item.year}\" data-month=\"${item.month}\">${item.day}</td></tr><tr>`;\n        } else {\n          result += `<td class=\"${item.cls} ${item.dayCls}\" data-year=\"${item.year}\" data-month=\"${item.month}\">${item.day}</td>`;\n        }\n      }\n\n      this.$refs.body.innerHTML = result;\n    },\n\n    /**\n     * 获取当前元素的兄弟元素并且除去样式\n     * @param {HTMLElement} el 当前元素\n     * @param {String} cls 高亮样式\n     */\n    removeSiblingsCls (el, cls) {\n      const siblings = [].slice.call(this.$refs.body.querySelectorAll('td'));\n\n      siblings.forEach((e, i) => {\n        if (e !== el) {\n          e.classList.remove(cls);\n        }\n      });\n    },\n\n    /**\n     * 获取当前日期\n     * @return {Date} 日期\n     * @private\n     */\n    _getNowDay () {\n      return new Date();\n    },\n\n    /**\n     * 个位数不足补0\n     * @param {Number} num 数字\n     * @returns {String} 补0过后的数字\n     */\n    appendZero (num) {\n      if (num < 10) {\n        return `0${num}`;\n      }\n\n      return num;\n    },\n\n    /**\n     * 处理监听日期\n     * @param {HTMLElement} el 元素\n     * @param {String} operator 运算符\n     */\n    _handleTriggerDate (el, operator) {\n      let { month } = this;\n      let { year } = this;\n      const { style } = el;\n\n      // 弹起样式\n      style.paddingTop = '1px';\n\n      setTimeout(() => {\n        style.paddingTop = 0;\n      }, 100);\n\n      if (operator === '+') {\n        month++;\n      } else if (operator === '-') {\n        month--;\n      }\n\n      if (month <= 0) {\n        year--;\n      } else if (month > 12) {\n        year++;\n      }\n\n      this.createCalendar(year, month);\n    },\n\n    onClickLeftBtn (e) {\n      this._handleTriggerDate(e.target, '-');\n    },\n\n    onClickRightBtn (e) {\n      this._handleTriggerDate(e.target, '+');\n    },\n\n    onClickBody (e) {\n      const { target } = e;\n      const { cls } = this;\n      const { year } = target.dataset;\n      const { month } = target.dataset;\n      const day = target.innerHTML;\n\n      target.classList.add(cls);\n      this.removeSiblingsCls(target, cls);\n\n      if (month > this.month || month < this.month) {\n        this.createCalendar(year, month, parseInt(day, 10));\n      } else {\n        this.result = {\n          year: year.toString(),\n          month: month.toString(),\n          day: day.toString()\n        };\n        this.$emit('change', this.result);\n      }\n    },\n\n    getCalendarData () {\n      return this.result;\n    }\n  },\n  mounted () {\n    this.createCalendar();\n  }\n};\n",{"version":3,"sources":["easycalendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"easycalendar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"ui-datapicker-wrapper\" v-show=\"show\">\n    <div class=\"ui-datepicker-header\">\n      <a href=\"javascript:void(0);\" class=\"ui-datepicker-btn ui-datepicker-prev-btn\" @click=\"onClickLeftBtn($event)\">&lt;</a>\n      <a href=\"javascript:void(0);\" class=\"ui-datepicker-btn ui-datepicker-next-btn\" @click=\"onClickRightBtn($event)\">&gt;</a>\n      <span class=\"ui-datepicker-curr-month\" ref=\"date\"></span>\n    </div>\n    <div class=\"ui-datepicker-body\">\n      <table>\n        <thead>\n        <tr>\n          <th>一</th>\n          <th>二</th>\n          <th>三</th>\n          <th>四</th>\n          <th>五</th>\n          <th>六</th>\n          <th>日</th>\n        </tr>\n        </thead>\n        <tbody ref=\"body\" @click=\"onClickBody($event)\"></tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Easycalendar',\n  model: {\n    prop: 'isShow',\n    event: 'changeVisible'\n  },\n  props: {\n    isShow: {\n      type: Boolean,\n      default: true\n    },\n    cls: {\n      type: String,\n      default: 'cur'\n    }\n  },\n  data () {\n    return {\n      year: null,\n      month: null,\n      day: null,\n      show: this.isShow,\n      result: {}\n    };\n  },\n  watch: {\n    isShow (value) {\n      this.show = value;\n    }\n  },\n  methods: {\n    /**\n     * 创建日期插件\n     * @param {Number} year 年\n     * @param {Number} month 月\n     * @param {Number} day 日\n     */\n    createCalendar (year, month, day) {\n      const today = this._getNowDay();\n\n      if (!year) {\n        year = today.getFullYear();\n      }\n\n      if (!day) {\n        day = today.getDate();\n      }\n\n      if (month === undefined) {\n        month = today.getMonth();\n      } else {\n        month -= 1;\n\n        if (month < 0) {\n          month = 11;\n        } else if (month > 11) {\n          month = 0;\n        }\n      }\n\n      const todayDate = new Date(year, month, 1);\n      const todayYear = todayDate.getFullYear();\n      const todayMonth = todayDate.getMonth() + 1;\n      let todayDateOfWeek = todayDate.getDay();\n\n      const preDate = new Date(year, month, 0);\n      const preYear = preDate.getFullYear();\n      const preMonth = preDate.getMonth() + 1;\n      const preDateOfMonth = preDate.getDate();\n\n      const lastDate = new Date(year, month + 1, 0);\n      const lastDateOfMonth = lastDate.getDate();\n\n      const nextDate = new Date(year, month + 1, 1);\n      const nextYear = nextDate.getFullYear();\n      const nextMonth = nextDate.getMonth() + 1;\n\n      if (day > lastDateOfMonth) {\n        throw new Error(`当前传入天数，超出本月应有天数，本月只有：${lastDateOfMonth}天`);\n      }\n\n      // 0 - 6 0代表星期天，修改一下\n      if (todayDateOfWeek === 0) {\n        todayDateOfWeek = 7;\n      }\n\n      const preDayOfCount = todayDateOfWeek - 1;\n      const result = [];\n      let _year = 0;\n      let _month = 0;\n      let _day = 0;\n      let cls = '';\n      let dayCls = '';\n      let index = 0;\n\n      for (let i = 0, len = 42; i < len; i++) {\n        index = i - preDayOfCount;\n\n        if (index < 0) {\n          _year = preYear;\n          _month = preMonth;\n          _day = preDateOfMonth + index + 1;\n          cls = 'exceed';\n        }\n\n        if (index >= 0 && index < lastDateOfMonth) {\n          _year = todayYear;\n          _month = todayMonth;\n          _day = index + 1;\n          cls = '';\n        }\n\n        if (index >= lastDateOfMonth) {\n          _year = nextYear;\n          _month = nextMonth;\n          _day = index - lastDateOfMonth + 1;\n          cls = 'exceed';\n        }\n\n        if (_month === todayMonth && _year === todayYear && _day === day) {\n          dayCls = this.cls;\n        } else {\n          dayCls = '';\n        }\n\n        result.push({\n          year: _year,\n          month: _month,\n          day: _day,\n          cls,\n          dayCls\n        });\n      }\n\n      this.$refs.date.innerHTML = `${todayYear}-${this.appendZero(todayMonth)}`;\n      this.year = todayYear;\n      this.month = todayMonth;\n      this.day = day;\n      this.result = {\n        year: todayYear.toString(),\n        month: todayMonth.toString(),\n        day: day.toString()\n      };\n      this.$emit('change', this.result);\n      this._renderCalendar(result);\n    },\n\n    /**\n     * 渲染日期\n     * @param {String} dateCollection 日期集合\n     */\n    _renderCalendar (dateCollection) {\n      let result = '';\n\n      for (let i = 1, len = dateCollection.length; i <= len; i++) {\n        const item = dateCollection[i - 1];\n\n        if (i === 1) {\n          result += `<tr><td class=\"${item.cls} ${item.dayCls}\" data-year=\"${item.year}\" data-month=\"${item.month}\">${item.day}</td>`;\n        } else if (i % 7 === 0) {\n          result += `<td class=\"${item.cls} ${item.dayCls}\" data-year=\"${item.year}\" data-month=\"${item.month}\">${item.day}</td></tr><tr>`;\n        } else {\n          result += `<td class=\"${item.cls} ${item.dayCls}\" data-year=\"${item.year}\" data-month=\"${item.month}\">${item.day}</td>`;\n        }\n      }\n\n      this.$refs.body.innerHTML = result;\n    },\n\n    /**\n     * 获取当前元素的兄弟元素并且除去样式\n     * @param {HTMLElement} el 当前元素\n     * @param {String} cls 高亮样式\n     */\n    removeSiblingsCls (el, cls) {\n      const siblings = [].slice.call(this.$refs.body.querySelectorAll('td'));\n\n      siblings.forEach((e, i) => {\n        if (e !== el) {\n          e.classList.remove(cls);\n        }\n      });\n    },\n\n    /**\n     * 获取当前日期\n     * @return {Date} 日期\n     * @private\n     */\n    _getNowDay () {\n      return new Date();\n    },\n\n    /**\n     * 个位数不足补0\n     * @param {Number} num 数字\n     * @returns {String} 补0过后的数字\n     */\n    appendZero (num) {\n      if (num < 10) {\n        return `0${num}`;\n      }\n\n      return num;\n    },\n\n    /**\n     * 处理监听日期\n     * @param {HTMLElement} el 元素\n     * @param {String} operator 运算符\n     */\n    _handleTriggerDate (el, operator) {\n      let { month } = this;\n      let { year } = this;\n      const { style } = el;\n\n      // 弹起样式\n      style.paddingTop = '1px';\n\n      setTimeout(() => {\n        style.paddingTop = 0;\n      }, 100);\n\n      if (operator === '+') {\n        month++;\n      } else if (operator === '-') {\n        month--;\n      }\n\n      if (month <= 0) {\n        year--;\n      } else if (month > 12) {\n        year++;\n      }\n\n      this.createCalendar(year, month);\n    },\n\n    onClickLeftBtn (e) {\n      this._handleTriggerDate(e.target, '-');\n    },\n\n    onClickRightBtn (e) {\n      this._handleTriggerDate(e.target, '+');\n    },\n\n    onClickBody (e) {\n      const { target } = e;\n      const { cls } = this;\n      const { year } = target.dataset;\n      const { month } = target.dataset;\n      const day = target.innerHTML;\n\n      target.classList.add(cls);\n      this.removeSiblingsCls(target, cls);\n\n      if (month > this.month || month < this.month) {\n        this.createCalendar(year, month, parseInt(day, 10));\n      } else {\n        this.result = {\n          year: year.toString(),\n          month: month.toString(),\n          day: day.toString()\n        };\n        this.$emit('change', this.result);\n      }\n    },\n\n    getCalendarData () {\n      return this.result;\n    }\n  },\n  mounted () {\n    this.createCalendar();\n  }\n};\n</script>\n\n<style scoped>\n  .ui-datapicker-wrapper {\n    display: block;\n    font-size: 16px;\n    color: #666;\n    box-shadow: 2px 2px 8px 2px rgba(128, 128, 128, .3);\n  }\n\n  .ui-datapicker-wrapper .ui-datepicker-header {\n    height: 50px;\n    line-height: 50px;\n    padding: 0 20px;\n    text-align: center;\n    background-color: #f0f0f0;\n    border-bottom: 1px solid #ccc;\n    font-weight: bold;\n  }\n\n  .ui-datapicker-wrapper .ui-datepicker-btn {\n    font-family: serif;\n    font-size: 20px;\n    width: 20px;\n    height: 50px;\n    line-height: 50px;\n    color: #1abc9c;\n    text-align: center;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  .ui-datapicker-wrapper .ui-datepicker-prev-btn {\n    float: left;\n  }\n\n  .ui-datapicker-wrapper .ui-datepicker-next-btn {\n    float: right;\n  }\n\n  /* body */\n\n  .ui-datapicker-wrapper .ui-datepicker-body table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n\n  .ui-datapicker-wrapper .ui-datepicker-body th,\n  .ui-datapicker-wrapper .ui-datepicker-body /deep/ td {\n    height: 30px;\n    text-align: center;\n  }\n\n  .ui-datapicker-wrapper .ui-datepicker-body th {\n    font-size: 12px;\n    height: 40px;\n    line-height: 40px;\n  }\n\n  .ui-datapicker-wrapper .ui-datepicker-body /deep/ td {\n    border: 1px solid #f0f0f0;\n    vertical-align: middle;\n    font-size: 14px;\n    cursor: pointer;\n  }\n\n  .ui-datapicker-wrapper .ui-datepicker-body /deep/ td:last-child {\n    border-right: none;\n  }\n\n  .ui-datepicker-body /deep/ tr td.exceed {\n    color: #999;\n  }\n\n  .ui-datepicker-body /deep/ tr td.cur {\n    background-color: #00968830;\n    color: #f00;\n  }\n</style>\n"]}]}