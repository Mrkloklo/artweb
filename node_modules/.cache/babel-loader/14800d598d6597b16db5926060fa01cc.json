{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujiahao/Documents/work/github/artweb/src/components/field.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/components/field.vue","mtime":1588230106486},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js","mtime":1585810053320}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"/Users/gujiahao/Documents/work/github/artweb/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"vant/es/field/style\";\nimport _Field from \"vant/es/field\";\nexport default {\n  name: 'Field',\n  components: _defineProperty({}, _Field.name, _Field),\n  model: {\n    prop: 'fieldValue',\n    event: 'changeFieldValue'\n  },\n  props: {\n    label: String,\n    value: [Number, String],\n    type: {\n      type: String,\n      default: 'text'\n    },\n    border: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    isLink: {\n      type: Boolean,\n      default: false\n    },\n    error: {\n      type: Boolean,\n      default: false\n    },\n    errorMessage: {\n      type: String,\n      default: ''\n    },\n    labelAlign: {\n      type: String,\n      default: 'left'\n    },\n    inputAlign: {\n      type: String,\n      default: 'left'\n    },\n    autosize: {\n      type: [Boolean, Object],\n      default: function _default() {\n        return false;\n      }\n    },\n    labelWidth: {\n      type: [String, Number],\n      default: '90px'\n    },\n    placeholder: String,\n    leftIcon: String,\n    rightIcon: String,\n    maxlength: Number,\n    autofocus: Boolean,\n    fieldValue: {\n      type: String,\n      default: ''\n    },\n    rows: [Number, String],\n    cols: [Number, String],\n    errorMessageAlign: {\n      type: String,\n      default: 'left'\n    }\n  },\n  data: function data() {\n    return {\n      currentValue: null\n    };\n  },\n  methods: {\n    onInput: function onInput() {\n      this.$emit('changeFieldValue', this.currentValue);\n      this.$emit('input');\n    },\n    onClear: function onClear() {\n      this.$emit('changeFieldValue', '');\n      this.$emit('clear');\n    },\n    onClickLeftIcon: function onClickLeftIcon() {\n      this.$emit('click-left-icon');\n    },\n    onClickRightIcon: function onClickRightIcon() {\n      this.$emit('click-right-icon');\n    },\n    focus: function focus() {\n      this.$refs.field.focus();\n    },\n    blur: function blur() {\n      this.$refs.field.blur();\n    }\n  },\n  created: function created() {\n    this.currentValue = this.fieldValue;\n  }\n};",{"version":3,"sources":["field.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <van-field\n    v-model=\"currentValue\"\n    :label=\"label\"\n    :type=\"type\"\n    :value=\"value\"\n    :border=\"border\"\n    :disabled=\"disabled\"\n    :readonly=\"readonly\"\n    :clearable=\"clearable\"\n    :required=\"required\"\n    :is-link=\"isLink\"\n    :error=\"error\"\n    :error-message=\"errorMessage\"\n    :lbael-align=\"labelAlign\"\n    :input-align=\"inputAlign\"\n    :autosize=\"autosize\"\n    :left-icon=\"leftIcon\"\n    :right-icon=\"rightIcon\"\n    :label-width=\"labelWidth\"\n    :placeholder=\"placeholder\"\n    :maxlength=\"maxlength\"\n    :autofocus=\"autofocus\"\n    :rows=\"rows\"\n    :cols=\"cols\"\n    :error-message-align=\"errorMessageAlign\"\n    @input=\"onInput\"\n    @clear=\"onClear\"\n    @click-left-icon=\"onClickLeftIcon\"\n    @click-right-icon=\"onClickRightIcon\"\n    ref=\"field\"\n  >\n    <slot\n      name=\"label\"\n      slot=\"label\"\n    ></slot>\n    <slot\n      name=\"left-icon\"\n      slot=\"left-icon\"\n    ></slot>\n    <slot\n      name=\"right-icon\"\n      slot=\"right-icon\"\n    ></slot>\n    <slot\n      name=\"button\"\n      slot=\"button\"\n    ></slot>\n  </van-field>\n</template>\n\n<script>\nimport { Field } from 'vant';\n\nexport default {\n  name: 'Field',\n  components: {\n    [Field.name]: Field\n  },\n  model: {\n    prop: 'fieldValue',\n    event: 'changeFieldValue'\n  },\n  props: {\n    label: String,\n    value: [Number, String],\n    type: {\n      type: String,\n      default: 'text'\n    },\n    border: {\n      type: Boolean,\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    isLink: {\n      type: Boolean,\n      default: false\n    },\n    error: {\n      type: Boolean,\n      default: false\n    },\n    errorMessage: {\n      type: String,\n      default: ''\n    },\n    labelAlign: {\n      type: String,\n      default: 'left'\n    },\n    inputAlign: {\n      type: String,\n      default: 'left'\n    },\n    autosize: {\n      type: [Boolean, Object],\n      default () {\n        return false;\n      }\n    },\n    labelWidth: {\n      type: [String, Number],\n      default: '90px'\n    },\n    placeholder: String,\n    leftIcon: String,\n    rightIcon: String,\n    maxlength: Number,\n    autofocus: Boolean,\n    fieldValue: {\n      type: String,\n      default: ''\n    },\n    rows: [Number, String],\n    cols: [Number, String],\n    errorMessageAlign: {\n      type: String,\n      default: 'left'\n    }\n  },\n  data () {\n    return {\n      currentValue: null\n    };\n  },\n  methods: {\n    onInput () {\n      this.$emit('changeFieldValue', this.currentValue);\n      this.$emit('input');\n    },\n    onClear () {\n      this.$emit('changeFieldValue', '');\n      this.$emit('clear');\n    },\n    onClickLeftIcon () {\n      this.$emit('click-left-icon');\n    },\n    onClickRightIcon () {\n      this.$emit('click-right-icon');\n    },\n    focus () {\n      this.$refs.field.focus();\n    },\n    blur () {\n      this.$refs.field.blur();\n    }\n  },\n  created () {\n    this.currentValue = this.fieldValue;\n  }\n};\n</script>\n"],"sourceRoot":"src/components"}]}