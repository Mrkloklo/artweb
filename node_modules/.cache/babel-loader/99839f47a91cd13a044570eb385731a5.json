{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/thread-loader/dist/cjs.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/gujiahao/Documents/work/github/artweb/public/ejs/v3/ejs.native.js","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/public/ejs/v3/ejs.native.js","mtime":1588230106468},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/thread-loader/dist/cjs.js","mtime":1579587183081},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1579587173378}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\nimport _typeof from \"/Users/gujiahao/Documents/work/github/artweb/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\n\n/*!\n * ejsv3 v3.2.6d\n * (c) 2017-2019 \n * Released under the BSD-3-Clause License.\n * \n */\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory() : typeof define === 'function' && define.amd ? define(factory) : factory();\n})(window, function () {\n  'use strict';\n\n  function uiMixin(hybrid) {\n    var hybridJs = hybrid;\n    var innerUtil = hybridJs.innerUtil;\n    hybridJs.extendModule('ui', [{\n      namespace: 'toast',\n      os: ['ejs'],\n      defaultParams: {\n        message: ''\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'message');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'showDebugDialog',\n      os: ['ejs'],\n      defaultParams: {\n        debugInfo: ''\n      },\n      runCode: function runCode() {\n        for (var _len2 = arguments.length, rest = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject(rest, 'debugInfo');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'alert',\n      os: ['ejs'],\n      defaultParams: {\n        title: '',\n        message: '',\n        buttonName: '确定',\n        // 默认可取消\n        cancelable: 1\n      },\n      // 用confirm来模拟alert\n      runCode: function runCode() {\n        for (var _len3 = arguments.length, rest = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          rest[_key3] = arguments[_key3];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'message', 'title', 'buttonName');\n        args[0].buttonLabels = [args[0].buttonName];\n        hybridJs.ui.confirm.apply(this, args);\n      }\n    }, {\n      namespace: 'confirm',\n      os: ['ejs'],\n      defaultParams: {\n        title: '',\n        message: '',\n        buttonLabels: ['取消', '确定'],\n        // 默认可取消\n        cancelable: 1\n      }\n    }, {\n      namespace: 'prompt',\n      os: ['ejs'],\n      defaultParams: {\n        title: '',\n        hint: '',\n        text: '',\n        lines: 1,\n        maxLength: 10000,\n        buttonLabels: ['取消', '确定'],\n        // 默认可取消\n        cancelable: 1\n      }\n    }, {\n      namespace: 'select',\n      os: ['ejs'],\n      defaultParams: {\n        title: '',\n        items: [],\n        choiceState: [],\n        // 由以前的true和false替换为了1和0\n        isMultiSelect: 0,\n        // 样式类型，默认为0。 0：单列表样式；1：九宫格样式(目前只支持单选)\n        type: 0,\n        columns: 3,\n        // 可取消\n        cancelable: 1\n      },\n      runCode: function runCode() {\n        for (var _len4 = arguments.length, rest = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          rest[_key4] = arguments[_key4];\n        }\n\n        var args = rest;\n        var options = args[0];\n        var originalItems = options.items;\n\n        options.dataFilter = function (res) {\n          var newRes = res;\n          var index = -1;\n          var content = '';\n\n          if (newRes.result) {\n            var choiceState = newRes.result.choiceState;\n\n            if (newRes.result.which !== undefined) {\n              index = newRes.result.which || 0;\n              content = originalItems[index]; // 需要将中文解码\n\n              newRes.result.content = decodeURIComponent(content);\n            } else if (choiceState !== undefined) {\n              newRes.result.choiceContent = [];\n\n              for (var i = 0, len = choiceState.length; i < len; i += 1) {\n                if (+choiceState[i] === 1) {\n                  newRes.result.choiceContent.push(originalItems[i]);\n                }\n              }\n            }\n          }\n\n          return newRes;\n        };\n\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'actionSheet',\n      os: ['ejs'],\n      defaultParams: {\n        items: [],\n        // 默认可取消\n        cancelable: 1\n      },\n      runCode: function runCode() {\n        for (var _len5 = arguments.length, rest = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          rest[_key5] = arguments[_key5];\n        }\n\n        var args = rest;\n        var options = args[0];\n        var originalItems = options.items;\n\n        options.dataFilter = function (res) {\n          var newRes = res;\n          var index = -1;\n          var content = '';\n\n          if (newRes.result) {\n            index = newRes.result.which || 0;\n            content = originalItems[index]; // 需要将中文解码\n\n            newRes.result.content = decodeURIComponent(content);\n          }\n\n          return newRes;\n        };\n\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'popWindow',\n      os: ['ejs'],\n      defaultParams: {\n        titleItems: [],\n        iconItems: undefined,\n        iconFilterColor: ''\n      },\n\n      /**\n       * 有横向菜单和垂直菜单2种\n       * 可配合setNBRightImage、setNBRightText使用(iOS 不可配合使用)\n       */\n      runCode: function runCode() {\n        for (var _len6 = arguments.length, rest = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          rest[_key6] = arguments[_key6];\n        }\n\n        var args = rest;\n        var options = args[0];\n        var originalItems = options.titleItems; // 处理相对路径问题\n\n        if (options.iconItems) {\n          for (var i = 0, len = options.iconItems.length; i < len; i += 1) {\n            options.iconItems[i] = innerUtil.getFullPath(options.iconItems[i]);\n          }\n        }\n\n        options.dataFilter = function (res) {\n          var newRes = res;\n          var index = -1;\n          var content = '';\n\n          if (newRes.result) {\n            index = newRes.result.which || 0;\n            content = originalItems[index]; // 需要将中文解码\n\n            newRes.result.content = decodeURIComponent(content);\n          }\n\n          return newRes;\n        };\n\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'pickDate',\n      os: ['ejs'],\n      defaultParams: {\n        // 部分设备上设置标题后遮挡控件可不设置标题\n        title: '',\n        // 默认为空为使用当前时间\n        // 格式为 yyyy-MM-dd。\n        datetime: ''\n      }\n    }, {\n      namespace: 'pickTime',\n      os: ['ejs'],\n      defaultParams: {\n        // 部分设备上设置标题后遮挡控件可不设置标题\n        title: '',\n        // 默认为空为使用当前时间\n        // 格式为 HH:mm\n        datetime: ''\n      }\n    }, {\n      namespace: 'pickDateTime',\n      os: ['ejs'],\n      defaultParams: {\n        title1: '',\n        title2: '',\n        // 默认为空为使用当前时间\n        // 格式为 yyyy-MM-dd HH:mm\n        datetime: ''\n      }\n    }, {\n      namespace: 'showWaiting',\n      os: ['ejs'],\n      defaultParams: {\n        message: '加载中...'\n      },\n      runCode: function runCode() {\n        for (var _len7 = arguments.length, rest = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n          rest[_key7] = arguments[_key7];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'message');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'closeWaiting',\n      os: ['ejs']\n    }, {\n      namespace: 'pullToRefresh.disable',\n      os: ['ejs'],\n      runCode: function runCode() {\n        // 修改为原生中的namespace\n        this.api.namespace = 'pullToRefreshDisable';\n\n        for (var _len8 = arguments.length, rest = Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n          rest[_key8] = arguments[_key8];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'pullToRefresh.stop',\n      os: ['ejs'],\n      runCode: function runCode() {\n        // 修改为原生中的namespace\n        this.api.namespace = 'pullToRefreshStop';\n\n        for (var _len9 = arguments.length, rest = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n          rest[_key9] = arguments[_key9];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'pullToRefresh.enable',\n      os: ['ejs'],\n      defaultParams: {\n        color: '000000'\n      },\n\n      /**\n       * 启用下拉刷新后，只要有下拉刷新就会回调，属于长期回调范围\n       */\n      runCode: function runCode() {\n        // 修改为原生中的namespace\n        this.api.namespace = 'pullToRefreshEnable';\n        this.api.isLongCb = true;\n\n        for (var _len10 = arguments.length, rest = Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n          rest[_key10] = arguments[_key10];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }]);\n  }\n\n  function authMixin(hybrid) {\n    var hybridJs = hybrid;\n    hybridJs.extendModule('auth', [{\n      namespace: 'getToken',\n      os: ['ejs']\n    }, {\n      namespace: 'refreshToken',\n      os: ['ejs']\n    }, {\n      namespace: 'getUserInfo',\n      os: ['ejs']\n    }, {\n      namespace: 'getAuthCode',\n      os: ['ejs'],\n      support: '3.2.4'\n    }]);\n  }\n\n  function runtimeMixin(hybrid) {\n    var hybridJs = hybrid;\n    var innerUtil = hybridJs.innerUtil;\n    hybridJs.extendModule('runtime', [{\n      namespace: 'launchApp',\n      os: ['ejs'],\n      defaultParams: {\n        // android应用的包名\n        packageName: '',\n        // android应用页面类名\n        className: '',\n        // android应用页面配置的ActionName\n        actionName: '',\n        // 页面配置的Scheme名字，适用于Android与iOS\n        scheme: '',\n        // 传递的参数。需要目标应用解析获取参数。字符串形式\n        data: ''\n      }\n    }, {\n      namespace: 'isApplicationExist',\n      os: ['ejs'],\n      support: '3.1.2',\n      defaultParams: {\n        // android应用的包名\n        packageName: '',\n        // ios下的scheme\n        scheme: ''\n      }\n    }, {\n      namespace: 'getAppKey',\n      os: ['ejs']\n    }, {\n      namespace: 'getAppVersion',\n      os: ['ejs']\n    }, {\n      namespace: 'getEjsVersion',\n      os: ['ejs']\n    }, {\n      namespace: 'checkUpdate',\n      os: ['ejs']\n    }, {\n      namespace: 'clearCache',\n      os: ['ejs']\n    }, {\n      namespace: 'getGeolocation',\n      os: ['ejs'],\n      defaultParams: {\n        isShowDetail: 0,\n        // 1采用的火星坐标系，0采用地球坐标系\n        coordinate: 1\n      }\n    }, {\n      namespace: 'clipboard',\n      os: ['ejs'],\n      defaultParams: {\n        text: ''\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'text');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'openUrl',\n      os: ['ejs'],\n      defaultParams: {\n        url: ''\n      },\n      runCode: function runCode() {\n        for (var _len2 = arguments.length, rest = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject(rest, 'url');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'log',\n      os: ['ejs'],\n      defaultParams: {\n        text: ''\n      },\n      runCode: function runCode() {\n        for (var _len3 = arguments.length, rest = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          rest[_key3] = arguments[_key3];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'text');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      // 调试面板，如果native开启了调试，会在面板中打印\n      namespace: 'logPanel',\n      os: ['ejs'],\n      support: '3.1.4',\n      defaultParams: {\n        text: ''\n      },\n      runCode: function runCode() {\n        for (var _len4 = arguments.length, rest = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          rest[_key4] = arguments[_key4];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'text');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'openSetting',\n      os: ['ejs'],\n      support: '3.1.6'\n    }, {\n      namespace: 'getPlatformUrl',\n      os: ['ejs'],\n      support: '3.1.9'\n    }, {\n      namespace: 'getPluginVersion',\n      os: ['ejs'],\n      support: '3.2.1',\n      defaultParams: {\n        pluginName: '',\n        packageName: ''\n      }\n    }]);\n  }\n\n  function deviceMixin(hybrid) {\n    var hybridJs = hybrid;\n    var innerUtil = hybridJs.innerUtil;\n    hybridJs.extendModule('device', [{\n      namespace: 'setOrientation',\n      os: ['ejs'],\n      defaultParams: {\n        // 1表示竖屏，0表示横屏，-1表示跟随系统\n        orientation: 1\n      }\n    }, {\n      namespace: 'setZoomControl',\n      os: ['ejs'],\n      defaultParams: {\n        // 1表示显示，0表示隐藏\n        isShow: 1\n      }\n    }, {\n      namespace: 'setBounce',\n      os: ['ejs'],\n      defaultParams: {\n        // 1表示开启，0表示关闭\n        isEnable: 1\n      }\n    }, {\n      namespace: 'getDeviceId',\n      os: ['ejs']\n    }, {\n      namespace: 'getMacAddress',\n      os: ['ejs']\n    }, {\n      namespace: 'getScreenInfo',\n      os: ['ejs']\n    }, {\n      namespace: 'getVendorInfo',\n      os: ['ejs']\n    }, {\n      namespace: 'isTablet',\n      os: ['ejs']\n    }, {\n      namespace: 'getNetWorkInfo',\n      os: ['ejs']\n    }, {\n      namespace: 'callPhone',\n      os: ['ejs'],\n      defaultParams: {\n        phoneNum: ''\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'phoneNum');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'sendMsg',\n      os: ['ejs'],\n      defaultParams: {\n        phoneNum: '',\n        message: ''\n      },\n      runCode: function runCode() {\n        for (var _len2 = arguments.length, rest = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'phoneNum', 'message');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'closeInputKeyboard',\n      os: ['ejs']\n    }, {\n      namespace: 'vibrate',\n      os: ['ejs'],\n      defaultParams: {\n        duration: 500\n      },\n      runCode: function runCode() {\n        for (var _len3 = arguments.length, rest = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          rest[_key3] = arguments[_key3];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'duration');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'sendTo',\n      os: ['ejs'],\n      defaultParams: {\n        title: '',\n        url: '',\n        imgBase64: '',\n        imgURL: '',\n        sdPath: ''\n      }\n    }, {\n      namespace: 'setZoomControl',\n      os: ['ejs'],\n      defaultParams: {\n        isShow: 1\n      },\n      runCode: function runCode() {\n        for (var _len4 = arguments.length, rest = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          rest[_key4] = arguments[_key4];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'isShow');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'setBounce',\n      os: ['ejs'],\n      defaultParams: {\n        isEnable: 1\n      },\n      runCode: function runCode() {\n        for (var _len5 = arguments.length, rest = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          rest[_key5] = arguments[_key5];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'isEnable');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'shake.disable',\n      os: ['ejs'],\n      runCode: function runCode() {\n        // 修改为原生中的namespace\n        this.api.namespace = 'shakeDisable';\n\n        for (var _len6 = arguments.length, rest = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          rest[_key6] = arguments[_key6];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'shake.enable',\n      os: ['ejs'],\n\n      /**\n       * 启用摇一摇后，只要有摇一摇就会回调，属于长期回调范围\n       */\n      runCode: function runCode() {\n        // 修改为原生中的namespace\n        this.api.namespace = 'shakeEnable';\n        this.api.isLongCb = true;\n\n        for (var _len7 = arguments.length, rest = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n          rest[_key7] = arguments[_key7];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'checkPermissions',\n      os: ['ejs'],\n      support: '3.1.5',\n      defaultParams: {\n        // 0-6分别对应：location，storage，phone，camera，sms，contacts，microphone\n        permissionsType: 0\n      }\n    }, {\n      namespace: 'requestPermissions',\n      os: ['ejs'],\n      support: '3.1.5',\n      defaultParams: {\n        // 0-6分别对应：location，storage，phone，camera，sms，contacts，microphone\n        permissionsType: 0\n      }\n    }]);\n  }\n\n  function eventMixin(hybrid) {\n    var hybridJs = hybrid;\n    /**\n     * 前端的EVENT名称和原生容器的有一些差别\n     */\n\n    var EVENT_MAPPING = {\n      resume: 'OnPageResume',\n      pause: 'OnPagePause',\n      netChange: 'OnNetChanged',\n      search: 'OnSearch'\n    };\n    hybridJs.extendModule('event', [{\n      namespace: 'registerEvent',\n      os: ['ejs'],\n      defaultParams: {\n        key: ''\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        }\n\n        var args = rest;\n        var options = args[0];\n        options.key = EVENT_MAPPING[options.key] || options.key;\n        args[0] = options; // 长期回调为true，里面会自动生成长期回调id\n\n        this.api.isLongCb = true; // 标识是event，event的时候需要额外增加一个port参数，对应相应的长期回调id\n\n        this.api.isEvent = true;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'unRegisterEvent',\n      os: ['ejs'],\n      defaultParams: {\n        key: ''\n      },\n      runCode: function runCode() {\n        for (var _len2 = arguments.length, rest = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        }\n\n        var args = rest;\n        var options = args[0];\n        options.key = EVENT_MAPPING[options.key];\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'isRegisterEvent',\n      os: ['ejs'],\n      defaultParams: {\n        key: ''\n      },\n      runCode: function runCode() {\n        for (var _len3 = arguments.length, rest = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          rest[_key3] = arguments[_key3];\n        }\n\n        var args = rest;\n        var options = args[0];\n        options.key = EVENT_MAPPING[options.key];\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'config',\n      os: ['ejs'],\n      defaultParams: {\n        // 一个数组，不要传null，否则可能在iOS中会有问题\n        jsApiList: []\n      }\n    }]);\n  }\n\n  function storageMixin(hybrid) {\n    var hybridJs = hybrid;\n    var innerUtil = hybridJs.innerUtil;\n    hybridJs.extendModule('storage', [{\n      namespace: 'getItem',\n      os: ['ejs'],\n      defaultParams: {\n        // 对应的key\n        key: ''\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        } // 兼容数组形式\n\n\n        var args = rest;\n        var options = args[0];\n\n        if (!innerUtil.isObject(options.key)) {\n          options.key = [options.key];\n        }\n\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'setItem',\n      os: ['ejs'] // 格式为 key: value形式，支持多个key value\n\n    }, {\n      namespace: 'removeItem',\n      os: ['ejs'],\n      defaultParams: {\n        // 对应的key\n        key: ''\n      },\n      runCode: function runCode() {\n        for (var _len2 = arguments.length, rest = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        } // 兼容数组形式\n\n\n        var args = rest;\n        var options = args[0];\n\n        if (!innerUtil.isObject(options.key)) {\n          options.key = [options.key];\n        }\n\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'collection.getCollections',\n      os: ['ejs'],\n      defaultParams: {\n        pageIndex: 1,\n        pageSize: 20\n      },\n      runCode: function runCode() {\n        // 修改为原生中的namespace\n        this.api.namespace = 'getCollections';\n\n        for (var _len3 = arguments.length, rest = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          rest[_key3] = arguments[_key3];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'collection.saveCollections',\n      os: ['ejs'],\n      defaultParams: {\n        // 信息guid，必选\n        msgGuid: '',\n        // 信息标题，必选\n        title: '',\n        // 信息类型,根据业务需求自行定义，必选\n        type: '',\n        // 以下为可选内容\n        dateTime: '',\n        publisher: '',\n        // 链接地址\n        forward: '',\n        remark: '',\n        flag: ''\n      },\n      runCode: function runCode() {\n        // 修改为原生中的namespace\n        this.api.namespace = 'saveCollections';\n\n        for (var _len4 = arguments.length, rest = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          rest[_key4] = arguments[_key4];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'collection.isCollection',\n      os: ['ejs'],\n      defaultParams: {\n        // 信息guid，必选\n        msgGuid: ''\n      },\n      runCode: function runCode() {\n        // 修改为原生中的namespace\n        this.api.namespace = 'isCollection';\n\n        for (var _len5 = arguments.length, rest = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          rest[_key5] = arguments[_key5];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'collection.delCollection',\n      os: ['ejs'],\n      defaultParams: {\n        // 信息guid，必选\n        msgGuid: ''\n      },\n      runCode: function runCode() {\n        // 修改为原生中的namespace\n        this.api.namespace = 'delCollection';\n\n        for (var _len6 = arguments.length, rest = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          rest[_key6] = arguments[_key6];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'collection.delAllCollections',\n      os: ['ejs'],\n      runCode: function runCode() {\n        // 修改为原生中的namespace\n        this.api.namespace = 'delAllCollections';\n\n        for (var _len7 = arguments.length, rest = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n          rest[_key7] = arguments[_key7];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      // 获取应用管理平台配置的业务接口地址\n      namespace: 'getBusinessRestUrl',\n      os: ['ejs']\n    }]);\n  }\n\n  function cardMixin(hybrid) {\n    var hybridJS = hybrid;\n    var innerUtil = hybridJS.innerUtil;\n    hybridJS.extendModule('card', [{\n      namespace: 'setTitle',\n      os: ['ejs'],\n      defaultParams: {\n        text: '',\n        imageUrl: ''\n      },\n      support: '3.1.6',\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'text');\n        hybridJS.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'hide',\n      os: ['ejs'],\n      support: '3.1.6'\n    }, {\n      namespace: 'hideTitleBar',\n      os: ['ejs'],\n      support: '3.1.6'\n    }, {\n      namespace: 'addActionBtns',\n      os: ['ejs'],\n      defaultParams: {\n        buttonTexts: ['menu1', 'menu2', 'menu3']\n      },\n      support: '3.1.6',\n      runCode: function runCode() {\n        for (var _len2 = arguments.length, rest = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        }\n\n        var args = rest;\n        args[0].buttonTexts = innerUtil.eclipseButtonsNumber(args[0].buttonTexts, 3);\n        hybridJS.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'hideActionBar',\n      os: ['ejs'],\n      support: '3.1.6'\n    }, {\n      namespace: 'showTip',\n      os: ['ejs'],\n      defaultParams: {\n        tip: ''\n      },\n      support: '3.1.6',\n      runCode: function runCode() {\n        for (var _len3 = arguments.length, rest = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          rest[_key3] = arguments[_key3];\n        }\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'tip');\n        hybridJS.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'hideTip',\n      os: ['ejs'],\n      support: '3.1.6'\n    }, {\n      namespace: 'setTitleBtn',\n      os: ['ejs'],\n      defaultParams: {\n        text: ''\n      },\n      support: '3.1.6',\n      runCode: function runCode() {\n        for (var _len4 = arguments.length, rest = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          rest[_key4] = arguments[_key4];\n        }\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'text');\n        this.api.isLongCb = true;\n        hybridJS.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'setContentHeight',\n      os: ['ejs'],\n      support: '3.2.6',\n      defaultParams: {\n        unit: ''\n      }\n    }]);\n  }\n\n  function pageMixin(hybrid) {\n    var hybridJs = hybrid;\n    var innerUtil = hybridJs.innerUtil;\n    hybridJs.extendModule('page', [{\n      namespace: 'open',\n      os: ['ejs'],\n      defaultParams: {\n        pageUrl: '',\n        pageStyle: 1,\n        // 横竖屏,默认为1表示竖屏\n        orientation: 1,\n        // 额外数据\n        data: {}\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'pageUrl', 'data');\n        var options = args[0]; // 将额外数据拼接到url中\n\n        options.pageUrl = innerUtil.getFullUrlByParams(options.pageUrl, options.data); // 去除无用参数的干扰\n\n        options.data = undefined;\n\n        options.dataFilter = function (res) {\n          var newRes = res;\n\n          if (!innerUtil.isObject(newRes.result.resultData)) {\n            try {\n              newRes.result.resultData = JSON.parse(newRes.result.resultData);\n            } catch (e) {}\n          }\n\n          return newRes;\n        };\n\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'openLocal',\n      os: ['ejs'],\n      defaultParams: {\n        className: '',\n        // 为1则是打开已存在的页面，会杀掉所有该页面上的页面\n        isOpenExist: 0,\n        // 额外数据，注意额外数据只能一层键值对形式，不能再包裹子json\n        data: {}\n      },\n      runCode: function runCode() {\n        for (var _len2 = arguments.length, rest = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        }\n\n        var args = rest;\n        var options = args[0];\n        var pageStyle = options.data.pageStyle; // 兼容 pageStyle, 确保传递给原生的均是 Number 类型\n\n        if (pageStyle) {\n          options.data.pageStyle = typeof pageStyle === 'string' ? parseInt(pageStyle, 10) : pageStyle;\n        }\n\n        options.dataFilter = function (res) {\n          var newRes = res;\n\n          if (!innerUtil.isObject(newRes.result.resultData)) {\n            try {\n              newRes.result.resultData = JSON.parse(newRes.result.resultData);\n            } catch (e) {}\n          }\n\n          return newRes;\n        };\n\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'close',\n      os: ['ejs'],\n      defaultParams: {\n        // 需要关闭的页面层级，默认只会关闭一层\n        popPageNumber: 1,\n        // 需要传递的参数，是一个字符串\n        resultData: ''\n      },\n      runCode: function runCode() {\n        for (var _len3 = arguments.length, rest = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          rest[_key3] = arguments[_key3];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'resultData');\n\n        if (innerUtil.isObject(args[0].resultData)) {\n          args[0].resultData = JSON.stringify(args[0].resultData);\n        }\n\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'reload',\n      os: ['ejs']\n    }, {\n      namespace: 'showError',\n      os: ['ejs'],\n      defaultParams: {\n        // 0: 网络异常  1: 服务器异常 2: 访问超时 3: 页面加载失败\n        type: 0\n      },\n      runCode: function runCode() {\n        for (var _len4 = arguments.length, rest = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          rest[_key4] = arguments[_key4];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'type');\n        hybridJs.callInner.apply(this, args);\n      }\n    }]);\n  }\n\n  function navigatorMixin(hybrid) {\n    var hybridJs = hybrid;\n    var innerUtil = hybridJs.innerUtil;\n    /**\n     * 按钮最多允许6个英文字符，或3个中文\n     */\n\n    var MAX_BTN_TEXT_COUNT = 6;\n    hybridJs.extendModule('navigator', [{\n      namespace: 'setTitle',\n      os: ['ejs'],\n      defaultParams: {\n        title: '',\n        // 子标题\n        subTitle: '',\n        // 是否可点击，可点击时会有点击效果并且点击后会触发回调，不可点击时永远不会触发回调\n        // 可点击时，title会有下拉箭头\n        // promise调用时和其他长期回调一样立马then\n        direction: 'bottom',\n        // 是否可点击，如果为1，代表可点击，会在标题右侧出现一个下拉图标，并且能被点击监听\n        clickable: 0\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'title');\n        this.api.isLongCb = true;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'setMultiTitle',\n      os: ['ejs'],\n      defaultParams: {\n        titles: ''\n      },\n      runCode: function runCode() {\n        this.api.isLongCb = true;\n\n        for (var _len2 = arguments.length, rest = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'show',\n      os: ['ejs']\n    }, {\n      namespace: 'hide',\n      os: ['ejs']\n    }, {\n      namespace: 'showSearchBar',\n      os: ['ejs'],\n      runCode: function runCode() {\n        this.api.isLongCb = true;\n\n        for (var _len3 = arguments.length, rest = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          rest[_key3] = arguments[_key3];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'hideSearchBar',\n      os: ['ejs']\n    }, {\n      namespace: 'hideBackButton',\n      os: ['ejs']\n    }, {\n      namespace: 'hookSysBack',\n      os: ['ejs'],\n      runCode: function runCode() {\n        this.api.isLongCb = true;\n\n        for (var _len4 = arguments.length, rest = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          rest[_key4] = arguments[_key4];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'hookBackBtn',\n      os: ['ejs'],\n      runCode: function runCode() {\n        this.api.isLongCb = true;\n\n        for (var _len5 = arguments.length, rest = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          rest[_key5] = arguments[_key5];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'setRightBtn',\n      os: ['ejs'],\n      defaultParams: {\n        text: '',\n        imageUrl: '',\n        isShow: 1,\n        // 对应哪一个按钮，一般是0, 1可选择\n        which: 0\n      },\n      runCode: function runCode() {\n        for (var _len6 = arguments.length, rest = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          rest[_key6] = arguments[_key6];\n        }\n\n        var args = rest;\n        var options = args[0];\n        options.imageUrl = options.imageUrl && innerUtil.getFullPath(options.imageUrl);\n        options.text = innerUtil.eclipseText(options.text, MAX_BTN_TEXT_COUNT);\n        args[0] = options;\n        this.api.isLongCb = true;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'setRightMenu',\n      os: ['ejs'],\n      defaultParams: {\n        text: '',\n        imageUrl: '',\n        // 过滤色默认为空\n        iconFilterColor: '',\n        // 点击后出现的菜单列表，这个API会覆盖rightBtn\n        titleItems: [],\n        iconItems: []\n      },\n\n      /**\n       * 这个API比较特殊，暂时由前端模拟\n       */\n      runCode: function runCode() {\n        var _this = this;\n\n        for (var _len7 = arguments.length, rest = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n          rest[_key7] = arguments[_key7];\n        }\n\n        var newArgs = [].slice.call(rest);\n        var newOptions = innerUtil.extend({}, newArgs[0]);\n\n        newOptions.success = function () {\n          // 点击的时候，弹出菜单\n          hybridJs.ui.popWindow.apply(_this, rest);\n        };\n\n        newArgs[0] = newOptions;\n        hybridJs.navigator.setRightBtn.apply(this, newArgs);\n      }\n    }, {\n      namespace: 'setLeftBtn',\n      os: ['ejs'],\n      defaultParams: {\n        text: '',\n        imageUrl: '',\n        isShow: 1,\n        // 是否显示下拉箭头,如果带箭头，它会占两个位置，同时覆盖左侧按钮和左侧返回按钮\n        isShowArrow: 0\n      },\n      runCode: function runCode() {\n        for (var _len8 = arguments.length, rest = Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n          rest[_key8] = arguments[_key8];\n        }\n\n        var args = rest;\n        var options = args[0];\n        options.imageUrl = options.imageUrl && innerUtil.getFullPath(options.imageUrl);\n        options.text = innerUtil.eclipseText(options.text, MAX_BTN_TEXT_COUNT);\n        args[0] = options;\n        this.api.isLongCb = true;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'showStatusBar',\n      os: ['ejs']\n    }, {\n      namespace: 'hideStatusBar',\n      os: ['ejs']\n    }, {\n      namespace: 'setSearchWord',\n      os: ['ejs'],\n      support: '3.1.9',\n      defaultParams: {\n        keyword: ''\n      },\n      runCode: function runCode() {\n        for (var _len9 = arguments.length, rest = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n          rest[_key9] = arguments[_key9];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'keyword');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'getSearchWord',\n      os: ['ejs'],\n      support: '3.1.9'\n    }, {\n      namespace: 'setSearchBar',\n      os: ['ejs'],\n      defaultParams: {\n        isShow: 1,\n        keyword: '',\n        placeholder: '请输入搜索关键字',\n        isSearchable: 0\n      },\n      support: '3.2.2',\n      runCode: function runCode() {\n        this.api.isLongCb = true;\n\n        for (var _len10 = arguments.length, rest = Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n          rest[_key10] = arguments[_key10];\n        }\n\n        hybridJs.callInner.apply(this, rest);\n      }\n    }]);\n  }\n\n  function utilMixin(hybrid) {\n    var hybridJs = hybrid;\n    var innerUtil = hybridJs.innerUtil;\n    hybridJs.extendModule('util', [{\n      namespace: 'scan',\n      os: ['ejs']\n    }, {\n      namespace: 'downloadFile',\n      os: ['ejs'],\n      defaultParams: {\n        // 下载地址\n        url: '',\n        // 文件名。必填。\n        fileName: '',\n        // 下载分类。默认为(其他分类)。推荐传对应的模块名称。例如邮件(MAIL)。如果没有\"附件管理\"模块，可忽略该参数。\n        type: '',\n        //  如果本地已有该文件是否重新下载。默认为0(直接打开文件)，为1时重新下载文件并且重命名。\n        reDownloaded: 0,\n        // 是否下载后打开，为1为默认打开,不传则根据配置文件而定\n        // 仅在后台静默下载时有用\n        // openAfterComplete: 1,\n        // 是否在后台下载，如果是，则静默后台下载，否则会专门跳到一个下载页面\n        isBackground: 1\n      }\n    }, {\n      namespace: 'playVideo',\n      os: ['ejs'],\n      defaultParams: {\n        // 视频地址\n        videoUrl: ''\n      }\n    }, {\n      namespace: 'selectImage',\n      os: ['ejs'],\n      defaultParams: {\n        // 图片数量\n        photoCount: 9,\n        // 是否允许拍照，1：允许；0：不允许\n        showCamera: 0,\n        // 是否显示gif图片，1：显示；0：不显示\n        showGif: 0,\n        // 是否允许预览，1：允许，0：不允许\n        previewEnabled: 1,\n        // 已选图片，json数组格式，item为元素本地地址\n        selectedPhotos: []\n      }\n    }, {\n      namespace: 'selectFile',\n      os: ['ejs'],\n      defaultParams: {\n        // 文件数量\n        count: 9\n      }\n    }, {\n      namespace: 'prevImage',\n      os: ['ejs'],\n      defaultParams: {\n        // 默认显示图片序号\n        index: 0,\n        // 是否显示删除按钮，1：显示，0：不显示，默认不显示。如果显示按钮则自动注册回调事件。\n        showDeleteButton: 0,\n        // 图片地址，json数组格式，item为元素本地地址\n        selectedPhotos: []\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'text');\n        var selectedPhotos = args[0].selectedPhotos;\n\n        for (var i = 0, len = selectedPhotos.length; i < len; i += 1) {\n          args[0].selectedPhotos[i] = innerUtil.getFullPath(selectedPhotos[i]);\n        }\n\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'cameraImage',\n      os: ['ejs'],\n      defaultParams: {\n        // 宽度\n        width: 720,\n        // 压缩质量\n        quality: 70\n      }\n    }, {\n      namespace: 'recordVideo',\n      os: ['ejs'],\n      support: '3.1.2',\n      defaultParams: {\n        // 最大时长，单位为秒\n        maxDuration: 120,\n        className: hybridJs.os.android ? 'com.epoint.baseapp.component.media.ShootActivity' : 'EPTVideoRecordViewController'\n      },\n      runCode: function runCode() {\n        for (var _len2 = arguments.length, rest = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        } // 兼容字符串形式\n\n\n        var args = rest;\n        args[0].className = args[0].className;\n        args[0].data = {\n          maxDuration: args[0].maxDuration\n        };\n        hybridJs.page.openLocal.apply(this, args);\n      }\n    }, {\n      namespace: 'getPreviewUrl',\n      os: ['ejs']\n    }, {\n      namespace: 'openFile',\n      os: ['ejs'],\n      defaultParams: {\n        path: ''\n      },\n      runCode: function runCode() {\n        for (var _len3 = arguments.length, rest = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          rest[_key3] = arguments[_key3];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'path');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'goSearch',\n      os: ['ejs'],\n      defaultParams: {\n        searchType: '',\n        conditions: ''\n      }\n    }, {\n      namespace: 'createQRCode',\n      os: ['ejs'],\n      support: '3.1.8',\n      defaultParams: {\n        qrCodeStr: '',\n        size: 200\n      }\n    }, {\n      namespace: 'recognizeQRCode',\n      os: ['ejs'],\n      support: '3.1.8',\n      defaultParams: {\n        imgPath: '',\n        imgBase64: ''\n      },\n      runCode: function runCode() {\n        for (var _len4 = arguments.length, rest = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          rest[_key4] = arguments[_key4];\n        }\n\n        var args = rest;\n        var imgBase64 = args[0].imgBase64;\n        args[0].imgBase64 = imgBase64 ? innerUtil.getBase64NotUrl(imgBase64) : '';\n        hybridJs.callInner.apply(this, rest);\n      }\n    }, {\n      namespace: 'invokePluginApi',\n      os: ['ejs'],\n      support: '3.2.0',\n      defaultParams: {\n        path: '',\n        dataMap: ''\n      }\n    }, {\n      namespace: 'encrypt',\n      os: ['ejs'],\n      support: '3.2.3',\n      defaultParams: {\n        text: ''\n      }\n    }]);\n  }\n\n  function streamMixin(hybrid) {\n    var hybridJs = hybrid;\n    hybridJs.extendModule('stream', [{\n      namespace: 'fetch',\n      os: ['ejs'],\n      defaultParams: {\n        url: '',\n        method: 'POST',\n        // json text\n        type: 'json',\n        body: '',\n        // 有一些默认的头部信息\n        headers: {\n          // application/json\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        }\n\n        var args = rest;\n        var options = args[0];\n\n        options.dataFilter = function (res) {\n          var result = res.result;\n\n          if (options.type.toLowerCase() === 'json' && typeof result.data === 'string') {\n            try {\n              result.data = JSON.parse(result.data);\n            } catch (e) {}\n          }\n\n          return res;\n        };\n\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      // 标准的框架附件上传方案，token由原始内部处理\n      // 只能处理标准的框架接口\n      namespace: 'uploadFile',\n      os: ['ejs'],\n      defaultParams: {\n        // 标准上传只支持一个文件接一个的上传\n        path: '',\n        clientGuid: '',\n        clientInfo: '',\n        clientTag: '',\n        documentType: '',\n        attachFileName: ''\n      },\n      runCode: function runCode() {\n        for (var _len2 = arguments.length, rest = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        }\n\n        var args = rest;\n        var options = args[0]; // 自动处理fileName，根据路径提取\n\n        if (!options.documentType) {\n          var pathMatch = options.path.match(/([.][^.]+)$/);\n          options.documentType = pathMatch && pathMatch[1] || '';\n        }\n\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      // 标准的文件上传，可以上传多个文件\n      // 自己传headers和额外参数\n      namespace: 'uploadMultipartFile',\n      os: ['ejs'],\n      defaultParams: {\n        url: '',\n        // 有一些默认的头部信息\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        file: {\n          name: '',\n          path: '',\n          mediaType: '',\n          fileName: ''\n        },\n        // 额外的表单数据\n        dataForm: {}\n      },\n      runCode: function runCode() {\n        for (var _len3 = arguments.length, rest = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          rest[_key3] = arguments[_key3];\n        }\n\n        var args = rest;\n        var options = args[0]; // 自动处理fileName，根据路径提取\n\n        if (!options.file.fileName) {\n          var pathMatch = options.file.path.match(/[/]([^/]+)$/);\n          options.file.fileName = pathMatch && pathMatch[1] || '';\n        }\n\n        args[0] = options;\n        hybridJs.callInner.apply(this, args);\n      }\n    }]);\n  }\n\n  function contactMixin(hybrid) {\n    var hybridJs = hybrid; // contact是底层用的openLocal\n\n    hybridJs.extendModule('contact', [{\n      namespace: 'choose',\n      os: ['ejs'],\n      defaultParams: {\n        // 已选人员的用户guid列表\n        userguids: [],\n        className: hybridJs.os.android ? 'com.epoint.baseapp.component.chooseperson.PersonChooseActivity' : 'WPLPersonnelSelectViewController'\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        } // 兼容字符串形式\n\n\n        var args = rest;\n        args[0].className = args[0].className;\n        args[0].data = {\n          userguids: args[0].userguids\n        };\n        hybridJs.page.openLocal.apply(this, args);\n      }\n    }]);\n  }\n\n  function audioMixin(hybrid) {\n    var hybridJs = hybrid;\n    hybridJs.extendModule('audio', [{\n      namespace: 'startRecord',\n      os: ['ejs'],\n      support: '3.1.2',\n      defaultParams: {\n        maxDuration: 120\n      }\n    }, {\n      namespace: 'stopRecord',\n      os: ['ejs'],\n      support: '3.1.2'\n    }, {\n      namespace: 'cancelRecord',\n      os: ['ejs'],\n      support: '3.1.2'\n    }, {\n      namespace: 'startPlay',\n      os: ['ejs'],\n      support: '3.1.2',\n      defaultParams: {\n        path: ''\n      }\n    }, {\n      namespace: 'stopPlay',\n      os: ['ejs'],\n      support: '3.1.2',\n      defaultParams: {\n        path: ''\n      }\n    }]);\n  }\n\n  function ioMixin(hybrid) {\n    var hybridJs = hybrid;\n    var innerUtil = hybridJs.innerUtil;\n    hybridJs.extendModule('io', [{\n      namespace: 'downloadFile',\n      os: ['ejs'],\n      // 支持的最小版本，可以等于，Android，iOS通用\n      support: '3.1.2',\n      defaultParams: {\n        // 下载地址\n        url: '',\n        // 文件名。必填。\n        fileName: '',\n        // 下载分类。默认为(其他分类)。推荐传对应的模块名称。例如邮件(MAIL)。如果没有\"附件管理\"模块，可忽略该参数。\n        type: '',\n        //  如果本地已有该文件是否重新下载。默认为0(直接打开文件)，为1时重新下载文件并且重命名。\n        reDownloaded: 0,\n        // 是否下载后打开，为1为默认打开,不传则根据配置文件而定\n        // 仅在后台静默下载时有用\n        // openAfterComplete: 1,\n        // 是否在后台下载，如果是，则静默后台下载，否则会专门跳到一个下载页面\n        isBackground: 1\n      }\n    }, {\n      namespace: 'selectFile',\n      os: ['ejs'],\n      support: '3.1.2',\n      defaultParams: {\n        // 文件数量\n        count: 9\n      }\n    }, {\n      namespace: 'openFile',\n      os: ['ejs'],\n      support: '3.1.2',\n      defaultParams: {\n        path: ''\n      },\n      runCode: function runCode() {\n        for (var _len = arguments.length, rest = Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        } // 兼容字符串形式\n\n\n        var args = innerUtil.compatibleStringParamsToObject.call(this, rest, 'path');\n        hybridJs.callInner.apply(this, args);\n      }\n    }, {\n      namespace: 'renameFile',\n      os: ['ejs'],\n      support: '3.1.2',\n      defaultParams: {\n        path: '',\n        // 如果仅仅是想重命名名字，传newName即可\n        newName: '',\n        // 如果想要重命名后缀，传后缀就可以了，没有后缀请不要传\n        newSuffix: undefined\n      }\n    }, {\n      namespace: 'copyFile',\n      os: ['ejs'],\n      support: '3.1.2',\n      defaultParams: {\n        path: '',\n        // 新的路径\n        newPath: ''\n      }\n    }, {\n      namespace: 'deleteFile',\n      os: ['ejs'],\n      support: '3.1.2',\n      defaultParams: {\n        path: ''\n      }\n    }, {\n      namespace: 'getFileSize',\n      os: ['ejs'],\n      support: '3.1.7',\n      defaultParams: {\n        path: ''\n      }\n    }, {\n      namespace: 'screenShot',\n      os: ['ejs'],\n      support: '3.2.5a',\n      defaultParams: {\n        captureType: 1\n      }\n    }]);\n  }\n\n  var hybridJs = window.ejs;\n  uiMixin(hybridJs);\n  authMixin(hybridJs);\n  runtimeMixin(hybridJs);\n  deviceMixin(hybridJs);\n  eventMixin(hybridJs);\n  storageMixin(hybridJs);\n  cardMixin(hybridJs);\n  pageMixin(hybridJs);\n  navigatorMixin(hybridJs);\n  utilMixin(hybridJs);\n  streamMixin(hybridJs);\n  contactMixin(hybridJs);\n  audioMixin(hybridJs);\n  ioMixin(hybridJs);\n});",null]}