{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/eslint-loader/index.js??ref--13-0!/Users/gujiahao/Documents/work/github/artweb/src/utils/string.js","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/utils/string.js","mtime":1588230106656},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\n\n/*\n * @Author: guotq\n * @Date: 2019-07-30 17:52:39\n * @Last Modified by: guotq\n * @Last Modified time: 2019-07-30 17:52:39\n * @Description: 字符串操作相关， 例如邮箱验证， 身份证验证等\n */\nimport Util from '@utils';\nexport default {\n  /**\n   * 2019-06-13 14:05:46\n   * 验证是否是整数\n   * @param {String} v 要验证的数字\n   * @returns {Boolean} 是否是整数\n   */\n  isInt: function isInt(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    var isInteger = function isInteger(s) {\n      if (s < 0) {\n        s = -s;\n      }\n\n      var n = String(s);\n      return n.length > 0 && !/[^0-9]/.test(n);\n    };\n\n    return isInteger(v);\n  },\n\n  /**\n   * 2019-06-13 14:05:46\n   * 验证是否是数字\n   * @param {String} v 要验证的数字或字符串数字\n   * @returns {Boolean} 是否是数字或者字符串数字\n   */\n  isFloat: function isFloat(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    var n = String(v);\n\n    if (n.indexOf('-') !== -1 && n.indexOf('-') !== 0) {\n      return false;\n    }\n\n    n = n.replace('-', '');\n\n    if (n.split('.').length > 2) {\n      return false;\n    }\n\n    return n.length > 0 && !/[^0-9.]/.test(n) && !(n.charAt(n.length - 1) === '.');\n  },\n\n  /**\n   * 2019-06-13 14:05:46\n   * 验证是否是邮箱\n   * @param {String} v 要验证的邮箱\n   * @returns {Boolean} 是否是邮箱\n   */\n  isEmail: function isEmail(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    if (v.search(/^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/) !== -1) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * 2019-06-13 14:05:46\n   * 验证是否是 url\n   * @param {String} v url\n   * @returns {Boolean} 是否是url\n   */\n  isUrl: function isUrl(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    var IsURL = function IsURL(strurl) {\n      strurl = strurl.toLowerCase().split('?')[0];\n      var strRegex = '^((https|http|ftp|rtsp|mms)?://)?' + '(([0-9]{1,3}.){3}[0-9]{1,3}' + '|' + \"([0-9a-z_!~*'()-]+.)*\" + '([0-9a-z][0-9a-z-]{0,61})?[0-9a-z].' + '[a-z]{2,6})' + '(:[0-9]{1,5})?' + '((/?)|' + \"(/[0-9a-z_!~*'().;?:@&=+$,%#-]+)+/?)$\";\n      var re = new RegExp(strRegex);\n\n      if (re.test(strurl)) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    return IsURL(v);\n  },\n\n  /**\n   * 2019-06-13 14:06:59\n   * 手机号码格式验证\n   * @param {String} v 手机号码\n   * @returns {Boolean} 是否是手机号码\n   */\n  isMobile: function isMobile(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    return /^1[3456789]\\d{9}$/.test(v);\n  },\n\n  /**\n   * 2019-06-13 14:09:51\n   * 固定电话号码验证\n   * @param {String} v 固定电话号码\n   * @returns {Boolean} 是否是固定电话号码\n   */\n  isTel: function isTel(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    return /^0\\d{2,3}-?\\d{7,8}$/.test(v) || /^\\(0\\d{2,3}\\)\\d{7,8}$/.test(v);\n  },\n\n  /**\n   * 2019-06-13 14:15:29\n   * 电话号码格式验证\n   * @param {String} v 电话号码\n   * @returns {Boolean} 是否是电话号码\n   */\n  isPhone: function isPhone(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    return /^1[3456789]\\d{9}$/.test(v) || /^0\\d{2,3}-?\\d{7,8}$/.test(v) || /^\\(0\\d{2,3}\\)\\d{7,8}$/.test(v);\n  },\n\n  /**\n   * 2019-06-13 14:15:29\n   * 邮政编码格式验证\n   * @param {String} v 邮政编码\n   * @returns {Boolean} 是否是邮政编码\n   */\n  isPostCode: function isPostCode(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    return /^\\d{6}$/.test(v);\n  },\n\n  /**\n   * 2019-06-13 14:15:29\n   * 组织机构代码\n   * @param {String} v 组织机构代码\n   * @returns {Boolean} 是否是组织机构代码\n   */\n  isOrgCode: function isOrgCode(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    } // 组织机构代码\n\n\n    if (/^[A-Z0-9]{8}-[A-Z0-9]$/.test(v)) {\n      return true;\n    } // 统一社会信用代码\n\n\n    var reg = /^([0-9A-Z]{2})([0-9]{6})([0-9A-Z]{10})$/;\n\n    if (!reg.test(v)) {\n      return false;\n    }\n\n    return true;\n  },\n\n  /**\n   * 身份证验证\n   * @param {String} v 身份证\n   * @returns {Boolean} 是否是身份证\n   */\n  isIdCard: function isIdCard(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    function validateIdCard(idCard) {\n      // 15位和18位身份证号码的正则表达式\n      var regIdCard = /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/; // 如果通过该验证，说明身份证格式正确，但准确性还需计算\n\n      if (regIdCard.test(idCard)) {\n        if (idCard.length === 18) {\n          var idCardWi = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]; // 将前17位加权因子保存在数组里\n\n          var idCardY = [1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2]; // 这是除以11后，可能产生的11位余数、验证码，也保存成数组\n\n          var idCardWiSum = 0; // 用来保存前17位各自乖以加权因子后的总和\n\n          for (var i = 0; i < 17; i++) {\n            idCardWiSum += idCard.substring(i, i + 1) * idCardWi[i];\n          }\n\n          var idCardMod = idCardWiSum % 11; // 计算出校验码所在数组的位置\n\n          var idCardLast = idCard.substring(17); // 得到最后一位身份证号码\n          // 如果等于2，则说明校验码是10，身份证号码最后一位应该是X\n\n          if (idCardMod === 2) {\n            if (idCardLast === 'X' || idCardLast === 'x') {\n              return true;\n            } else {\n              return false;\n            }\n          } else {\n            // 用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码\n            if (idCardLast === parseInt(idCardY[idCardMod], 10)) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n    }\n\n    return validateIdCard(v);\n  },\n\n  /**\n   * 过滤非法字符，过滤特殊字符与转义字符\n   * @param {string} str 需要过滤的字符串\n   * @param {RegExp} reg 正值式\n   * @return {String} 返回过滤后的结果\n   */\n  excludeSpecial: function excludeSpecial(str, reg) {\n    if (!str) {\n      return str;\n    }\n\n    reg = reg || /[/\\b\\f\\n\\r\\t`~!@#$^&%*()=|{}+《》':;',[\\].<>?~！@#￥……&*（）——【】‘’；：”“'。，、？]/g;\n    str = str.replace(reg, '');\n    return str;\n  }\n};",{"version":3,"sources":["/Users/gujiahao/Documents/work/github/artweb/src/utils/string.js"],"names":["Util","isInt","v","isNull","isInteger","s","n","String","length","test","isFloat","indexOf","replace","split","charAt","isEmail","search","isUrl","IsURL","strurl","toLowerCase","strRegex","re","RegExp","isMobile","isTel","isPhone","isPostCode","isOrgCode","reg","isIdCard","validateIdCard","idCard","regIdCard","idCardWi","idCardY","idCardWiSum","i","substring","idCardMod","idCardLast","parseInt","excludeSpecial","str"],"mappings":"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","sourcesContent":["/*\n * @Author: guotq\n * @Date: 2019-07-30 17:52:39\n * @Last Modified by: guotq\n * @Last Modified time: 2019-07-30 17:52:39\n * @Description: 字符串操作相关， 例如邮箱验证， 身份证验证等\n */\nimport Util from '@utils';\n\nexport default {\n\n  /**\n   * 2019-06-13 14:05:46\n   * 验证是否是整数\n   * @param {String} v 要验证的数字\n   * @returns {Boolean} 是否是整数\n   */\n  isInt(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    const isInteger = function (s) {\n      if (s < 0) {\n        s = -s;\n      }\n      const n = String(s);\n\n      return n.length > 0 && !(/[^0-9]/).test(n);\n    };\n\n    return isInteger(v);\n  },\n\n  /**\n   * 2019-06-13 14:05:46\n   * 验证是否是数字\n   * @param {String} v 要验证的数字或字符串数字\n   * @returns {Boolean} 是否是数字或者字符串数字\n   */\n  isFloat(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    let n = String(v);\n\n    if (n.indexOf('-') !== -1 && n.indexOf('-') !== 0) {\n      return false;\n    }\n\n    n = n.replace('-', '');\n\n    if (n.split('.').length > 2) {\n      return false;\n    }\n\n    return n.length > 0 && !(/[^0-9.]/).test(n) && !(n.charAt(n.length - 1) === '.');\n  },\n\n  /**\n   * 2019-06-13 14:05:46\n   * 验证是否是邮箱\n   * @param {String} v 要验证的邮箱\n   * @returns {Boolean} 是否是邮箱\n   */\n  isEmail(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    if (v.search(/^\\w+((-\\w+)|(\\.\\w+))*@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/) !== -1) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * 2019-06-13 14:05:46\n   * 验证是否是 url\n   * @param {String} v url\n   * @returns {Boolean} 是否是url\n   */\n  isUrl(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    const IsURL = function (strurl) {\n      strurl = strurl.toLowerCase().split('?')[0];\n\n      const strRegex = '^((https|http|ftp|rtsp|mms)?://)?' +\n        '(([0-9]{1,3}.){3}[0-9]{1,3}' +\n        '|' +\n        \"([0-9a-z_!~*'()-]+.)*\" +\n        '([0-9a-z][0-9a-z-]{0,61})?[0-9a-z].' +\n        '[a-z]{2,6})' +\n        '(:[0-9]{1,5})?' +\n        '((/?)|' +\n        \"(/[0-9a-z_!~*'().;?:@&=+$,%#-]+)+/?)$\";\n\n      const re = new RegExp(strRegex);\n\n      if (re.test(strurl)) {\n        return (true);\n      } else {\n        return (false);\n      }\n    };\n\n    return IsURL(v);\n  },\n\n  /**\n   * 2019-06-13 14:06:59\n   * 手机号码格式验证\n   * @param {String} v 手机号码\n   * @returns {Boolean} 是否是手机号码\n   */\n  isMobile(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    return (/^1[3456789]\\d{9}$/).test(v);\n  },\n\n  /**\n   * 2019-06-13 14:09:51\n   * 固定电话号码验证\n   * @param {String} v 固定电话号码\n   * @returns {Boolean} 是否是固定电话号码\n   */\n  isTel(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    return (/^0\\d{2,3}-?\\d{7,8}$/).test(v) || (/^\\(0\\d{2,3}\\)\\d{7,8}$/).test(v);\n  },\n\n  /**\n   * 2019-06-13 14:15:29\n   * 电话号码格式验证\n   * @param {String} v 电话号码\n   * @returns {Boolean} 是否是电话号码\n   */\n  isPhone(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    return (/^1[3456789]\\d{9}$/).test(v) || (/^0\\d{2,3}-?\\d{7,8}$/).test(v) || (/^\\(0\\d{2,3}\\)\\d{7,8}$/).test(v);\n  },\n\n  /**\n   * 2019-06-13 14:15:29\n   * 邮政编码格式验证\n   * @param {String} v 邮政编码\n   * @returns {Boolean} 是否是邮政编码\n   */\n  isPostCode(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    return (/^\\d{6}$/).test(v);\n  },\n\n  /**\n   * 2019-06-13 14:15:29\n   * 组织机构代码\n   * @param {String} v 组织机构代码\n   * @returns {Boolean} 是否是组织机构代码\n   */\n  isOrgCode(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    // 组织机构代码\n    if ((/^[A-Z0-9]{8}-[A-Z0-9]$/).test(v)) {\n      return true;\n    }\n\n    // 统一社会信用代码\n    const reg = /^([0-9A-Z]{2})([0-9]{6})([0-9A-Z]{10})$/;\n\n    if (!reg.test(v)) {\n      return false;\n    }\n\n    return true;\n  },\n\n  /**\n   * 身份证验证\n   * @param {String} v 身份证\n   * @returns {Boolean} 是否是身份证\n   */\n  isIdCard(v) {\n    if (Util.isNull(v) || v === '') {\n      return true;\n    }\n\n    function validateIdCard(idCard) {\n      // 15位和18位身份证号码的正则表达式\n      const regIdCard = /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/;\n\n      // 如果通过该验证，说明身份证格式正确，但准确性还需计算\n      if (regIdCard.test(idCard)) {\n        if (idCard.length === 18) {\n          const idCardWi = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]; // 将前17位加权因子保存在数组里\n          const idCardY = [1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2]; // 这是除以11后，可能产生的11位余数、验证码，也保存成数组\n          let idCardWiSum = 0; // 用来保存前17位各自乖以加权因子后的总和\n\n          for (let i = 0; i < 17; i++) {\n            idCardWiSum += idCard.substring(i, i + 1) * idCardWi[i];\n          }\n\n          const idCardMod = idCardWiSum % 11; // 计算出校验码所在数组的位置\n          const idCardLast = idCard.substring(17); // 得到最后一位身份证号码\n\n          // 如果等于2，则说明校验码是10，身份证号码最后一位应该是X\n          if (idCardMod === 2) {\n            if (idCardLast === 'X' || idCardLast === 'x') {\n              return true;\n            } else {\n              return false;\n            }\n          } else {\n            // 用计算出的验证码与最后一位身份证号码匹配，如果一致，说明通过，否则是无效的身份证号码\n            if (idCardLast === parseInt(idCardY[idCardMod], 10)) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n    }\n\n    return validateIdCard(v);\n  },\n\n  /**\n   * 过滤非法字符，过滤特殊字符与转义字符\n   * @param {string} str 需要过滤的字符串\n   * @param {RegExp} reg 正值式\n   * @return {String} 返回过滤后的结果\n   */\n  excludeSpecial(str, reg) {\n    if (!str) {\n      return str;\n    }\n\n    reg = reg || /[/\\b\\f\\n\\r\\t`~!@#$^&%*()=|{}+《》':;',[\\].<>?~！@#￥……&*（）——【】‘’；：”“'。，、？]/g;\n    str = str.replace(reg, '');\n\n    return str;\n  }\n};\n"]}]}