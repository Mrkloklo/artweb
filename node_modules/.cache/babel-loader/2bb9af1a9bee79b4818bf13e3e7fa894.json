{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/gujiahao/Documents/work/github/artweb/src/utils/sha1.js","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/utils/sha1.js","mtime":1588230106653},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1579587173378}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n\n/*\n * @Author: guotq\n * @Date: 2019-04-02 17:04:21\n * @Last Modified by: guotq\n * @Last Modified time: 2019-04-03 09:02:16\n * @Description: 移值 M7 框架中的 util.sha1\n */\nvar hexcase = 0;\nvar chrsz = 8;\n\nvar safeAdd = function safeAdd(x, y) {\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xFFFF;\n};\n\nvar rol = function rol(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n};\n\nvar sha1Ft = function sha1Ft(t, b, c, d) {\n  if (t < 20) {\n    return b & c | ~b & d;\n  }\n\n  if (t < 40) {\n    return b ^ c ^ d;\n  }\n\n  if (t < 60) {\n    return b & c | b & d | c & d;\n  }\n\n  return b ^ c ^ d;\n};\n\nvar str2binb = function str2binb(str) {\n  var bin = [];\n  var mask = (1 << chrsz) - 1;\n\n  for (var i = 0; i < str.length * chrsz; i += chrsz) {\n    bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << 32 - chrsz - i % 32;\n  }\n\n  return bin;\n};\n\nvar sha1Kt = function sha1Kt(t) {\n  return t < 20 ? 1518500249 : t < 40 ? 1859775393 : t < 60 ? -1894007588 : -899497514;\n};\n\nvar Utf8Encode = function Utf8Encode(string) {\n  string = string.replace(/\\r\\n/g, '\\n');\n  var utftext = '';\n\n  for (var n = 0; n < string.length; n++) {\n    var c = string.charCodeAt(n);\n\n    if (c < 128) {\n      utftext += String.fromCharCode(c);\n    } else if (c > 127 && c < 2048) {\n      utftext += String.fromCharCode(c >> 6 | 192);\n      utftext += String.fromCharCode(c & 63 | 128);\n    } else {\n      utftext += String.fromCharCode(c >> 12 | 224);\n      utftext += String.fromCharCode(c >> 6 & 63 | 128);\n      utftext += String.fromCharCode(c & 63 | 128);\n    }\n  }\n\n  return utftext;\n};\n\nvar binb2hex = function binb2hex(binarray) {\n  var hexTab = hexcase ? '0123456789ABCDEF' : '0123456789abcdef';\n  var str = '';\n\n  for (var i = 0; i < binarray.length * 4; i++) {\n    str += hexTab.charAt(binarray[i >> 2] >> (3 - i % 4) * 8 + 4 & 0xF) + hexTab.charAt(binarray[i >> 2] >> (3 - i % 4) * 8 & 0xF);\n  }\n\n  return str;\n};\n\nvar coreSha1 = function coreSha1(x, len) {\n  x[len >> 5] |= 0x80 << 24 - len % 32;\n  x[(len + 64 >> 9 << 4) + 15] = len;\n  var w = Array(80);\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n  var e = -1009589776;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    var olde = e;\n\n    for (var j = 0; j < 80; j++) {\n      if (j < 16) {\n        w[j] = x[i + j];\n      } else {\n        w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n      }\n\n      var t = safeAdd(safeAdd(rol(a, 5), sha1Ft(j, b, c, d)), safeAdd(safeAdd(e, w[j]), sha1Kt(j)));\n      e = d;\n      d = c;\n      c = rol(b, 30);\n      b = a;\n      a = t;\n    }\n\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n    e = safeAdd(e, olde);\n  }\n\n  return [a, b, c, d, e];\n};\n\nexport default {\n  /**\n   * sha1_hex散列，16进制字符串形式\n   * @param {String} s 内容\n   * @return {String} 返回密文,hex字符串\n   */\n  hex: function hex(s) {\n    s = Utf8Encode(s);\n    return binb2hex(coreSha1(str2binb(s), s.length * chrsz));\n  }\n};",{"version":3,"sources":["/Users/gujiahao/Documents/work/github/artweb/src/utils/sha1.js"],"names":["hexcase","chrsz","safeAdd","x","y","lsw","msw","rol","num","cnt","sha1Ft","t","b","c","d","str2binb","str","bin","mask","i","length","charCodeAt","sha1Kt","Utf8Encode","string","replace","utftext","n","String","fromCharCode","binb2hex","binarray","hexTab","charAt","coreSha1","len","w","Array","a","e","olda","oldb","oldc","oldd","olde","j","hex","s"],"mappings":"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","sourcesContent":["/*\n * @Author: guotq\n * @Date: 2019-04-02 17:04:21\n * @Last Modified by: guotq\n * @Last Modified time: 2019-04-03 09:02:16\n * @Description: 移值 M7 框架中的 util.sha1\n */\n\nconst hexcase = 0;\nconst chrsz = 8;\n\nconst safeAdd = (x, y) => {\n  const lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\n  return (msw << 16) | (lsw & 0xFFFF);\n};\n\nconst rol = (num, cnt) => (num << cnt) | (num >>> (32 - cnt));\n\nconst sha1Ft = (t, b, c, d) => {\n  if (t < 20) {\n    return (b & c) | ((~b) & d);\n  }\n  if (t < 40) {\n    return b ^ c ^ d;\n  }\n  if (t < 60) {\n    return (b & c) | (b & d) | (c & d);\n  }\n\n  return b ^ c ^ d;\n};\n\nconst str2binb = (str) => {\n  const bin = [];\n  const mask = (1 << chrsz) - 1;\n\n  for (let i = 0; i < str.length * chrsz; i += chrsz) {\n    bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << (32 - chrsz - i % 32);\n  }\n\n  return bin;\n};\n\nconst sha1Kt = t => ((t < 20) ? 1518500249 : (t < 40) ? 1859775393 : (t < 60) ? -1894007588 : -899497514);\n\nconst Utf8Encode = (string) => {\n  string = string.replace(/\\r\\n/g, '\\n');\n  let utftext = '';\n\n  for (let n = 0; n < string.length; n++) {\n    const c = string.charCodeAt(n);\n\n    if (c < 128) {\n      utftext += String.fromCharCode(c);\n    } else if ((c > 127) && (c < 2048)) {\n      utftext += String.fromCharCode((c >> 6) | 192);\n      utftext += String.fromCharCode((c & 63) | 128);\n    } else {\n      utftext += String.fromCharCode((c >> 12) | 224);\n      utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n      utftext += String.fromCharCode((c & 63) | 128);\n    }\n  }\n\n  return utftext;\n};\n\nconst binb2hex = (binarray) => {\n  const hexTab = hexcase ? '0123456789ABCDEF' : '0123456789abcdef';\n  let str = '';\n\n  for (let i = 0; i < binarray.length * 4; i++) {\n    str += hexTab.charAt((binarray[i >> 2] >> ((3 - i % 4) * 8 + 4)) & 0xF) + hexTab.charAt((binarray[i >> 2] >> ((3 - i % 4) * 8)) & 0xF);\n  }\n\n  return str;\n};\n\nconst coreSha1 = (x, len) => {\n  x[len >> 5] |= 0x80 << (24 - len % 32);\n  x[((len + 64 >> 9) << 4) + 15] = len;\n\n  const w = Array(80);\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n  let e = -1009589776;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    const olde = e;\n\n    for (let j = 0; j < 80; j++) {\n      if (j < 16) {\n        w[j] = x[i + j];\n      } else {\n        w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n      }\n      const t = safeAdd(safeAdd(rol(a, 5), sha1Ft(j, b, c, d)), safeAdd(safeAdd(e, w[j]), sha1Kt(j)));\n\n      e = d;\n      d = c;\n      c = rol(b, 30);\n      b = a;\n      a = t;\n    }\n\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n    e = safeAdd(e, olde);\n  }\n\n  return [a, b, c, d, e];\n};\n\nexport default {\n  /**\n   * sha1_hex散列，16进制字符串形式\n   * @param {String} s 内容\n   * @return {String} 返回密文,hex字符串\n   */\n  hex (s) {\n    s = Utf8Encode(s);\n\n    return binb2hex(coreSha1(str2binb(s), s.length * chrsz));\n  }\n};\n"]}]}