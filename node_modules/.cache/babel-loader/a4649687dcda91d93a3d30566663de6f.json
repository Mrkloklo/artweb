{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/eslint-loader/index.js??ref--13-0!/Users/gujiahao/Documents/work/github/artweb/src/utils/storage.js","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/utils/storage.js","mtime":1588230106655},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _typeof from \"/Users/gujiahao/Documents/work/github/artweb/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\n\n/*\n * @Author: guotq\n * @Date: 2019-04-02 17:04:21\n * @Last Modified by: guotq\n * @Last Modified time: 2019-04-03 09:02:16\n * @Description: 移值 M7 框架中的 Util.storage\n */\nif (!('localStorage' in window)) {\n  throw new Error('你的浏览器不支持 storage api');\n}\n\nvar _window = window,\n    localStorage = _window.localStorage;\nexport default {\n  /**\n   * 存储键值对\n   * @param {String} key 键\n   * @param {String} value 值\n   * @returns {String} ''\n   */\n  setItem: function setItem(key, value) {\n    if (!key) {\n      return '';\n    }\n\n    if (_typeof(value) === 'object') {\n      value = JSON.stringify(value);\n    }\n\n    localStorage.setItem(key, value);\n  },\n\n  /**\n   * 读取键值对\n   * @param {String} key 键\n   * @param {Boolean} isJson 是否自动转为JSONObject对象\n   * @returns {Object} JSONOBJ\n   */\n  getItem: function getItem(key, isJson) {\n    var value = localStorage.getItem(key);\n    var result = value;\n\n    if (typeof result === 'string' && isJson) {\n      try {\n        result = JSON.parse(value);\n      } catch (_unused) {\n        result = value;\n      }\n    }\n\n    return result;\n  },\n\n  /**\n   * 移除键值对\n   * @param {String} key 键\n   */\n  removeItem: function removeItem(key) {\n    localStorage.removeItem(key);\n  },\n\n  /**\n   * 清空所有键值对\n   */\n  clear: function clear() {\n    localStorage.clear();\n  },\n\n  /**\n   * 遍历键值对\n   * @param {Function} callback 回调函数\n   * @param {Boolean} isJson 是否转换为 JSONObject 对象\n   */\n  each: function each(callback, isJson) {\n    var _this = this;\n\n    var keys = Object.keys(localStorage);\n    keys.forEach(function (e, i) {\n      callback(e, _this.getItem(e, isJson));\n    });\n  }\n};",{"version":3,"sources":["/Users/gujiahao/Documents/work/github/artweb/src/utils/storage.js"],"names":["window","Error","localStorage","setItem","key","value","JSON","stringify","getItem","isJson","result","parse","removeItem","clear","each","callback","keys","Object","forEach","e","i"],"mappings":";;;;AAAA;;;;;;;AAQA,IAAI,EAAE,kBAAkBA,MAApB,CAAJ,EAAiC;AAC/B,QAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;cAEwBD,M;IAAjBE,Y,WAAAA,Y;AAER,eAAe;AACb;;;;;;AAMAC,EAAAA,OAPa,mBAOJC,GAPI,EAOCC,KAPD,EAOQ;AACnB,QAAI,CAACD,GAAL,EAAU;AACR,aAAO,EAAP;AACD;;AAED,QAAI,QAAOC,KAAP,MAAiB,QAArB,EAA+B;AAC7BA,MAAAA,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAR;AACD;;AAEDH,IAAAA,YAAY,CAACC,OAAb,CAAqBC,GAArB,EAA0BC,KAA1B;AACD,GAjBY;;AAkBb;;;;;;AAMAG,EAAAA,OAxBa,mBAwBJJ,GAxBI,EAwBCK,MAxBD,EAwBS;AACpB,QAAMJ,KAAK,GAAGH,YAAY,CAACM,OAAb,CAAqBJ,GAArB,CAAd;AACA,QAAIM,MAAM,GAAGL,KAAb;;AAEA,QAAI,OAAOK,MAAP,KAAkB,QAAlB,IAA8BD,MAAlC,EAA0C;AACxC,UAAI;AACFC,QAAAA,MAAM,GAAGJ,IAAI,CAACK,KAAL,CAAWN,KAAX,CAAT;AACD,OAFD,CAEE,gBAAM;AACNK,QAAAA,MAAM,GAAGL,KAAT;AACD;AACF;;AAED,WAAOK,MAAP;AACD,GArCY;;AAsCb;;;;AAIAE,EAAAA,UA1Ca,sBA0CDR,GA1CC,EA0CI;AACfF,IAAAA,YAAY,CAACU,UAAb,CAAwBR,GAAxB;AACD,GA5CY;;AA6Cb;;;AAGAS,EAAAA,KAhDa,mBAgDJ;AACPX,IAAAA,YAAY,CAACW,KAAb;AACD,GAlDY;;AAmDb;;;;;AAKAC,EAAAA,IAxDa,gBAwDPC,QAxDO,EAwDGN,MAxDH,EAwDW;AAAA;;AACtB,QAAMO,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYd,YAAZ,CAAb;AAEAc,IAAAA,IAAI,CAACE,OAAL,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACrBL,MAAAA,QAAQ,CAACI,CAAD,EAAI,KAAI,CAACX,OAAL,CAAaW,CAAb,EAAgBV,MAAhB,CAAJ,CAAR;AACD,KAFD;AAGD;AA9DY,CAAf","sourcesContent":["/*\n * @Author: guotq\n * @Date: 2019-04-02 17:04:21\n * @Last Modified by: guotq\n * @Last Modified time: 2019-04-03 09:02:16\n * @Description: 移值 M7 框架中的 Util.storage\n */\n\nif (!('localStorage' in window)) {\n  throw new Error('你的浏览器不支持 storage api');\n}\n\nconst { localStorage } = window;\n\nexport default {\n  /**\n   * 存储键值对\n   * @param {String} key 键\n   * @param {String} value 值\n   * @returns {String} ''\n   */\n  setItem (key, value) {\n    if (!key) {\n      return '';\n    }\n\n    if (typeof value === 'object') {\n      value = JSON.stringify(value);\n    }\n\n    localStorage.setItem(key, value);\n  },\n  /**\n   * 读取键值对\n   * @param {String} key 键\n   * @param {Boolean} isJson 是否自动转为JSONObject对象\n   * @returns {Object} JSONOBJ\n   */\n  getItem (key, isJson) {\n    const value = localStorage.getItem(key);\n    let result = value;\n\n    if (typeof result === 'string' && isJson) {\n      try {\n        result = JSON.parse(value);\n      } catch {\n        result = value;\n      }\n    }\n\n    return result;\n  },\n  /**\n   * 移除键值对\n   * @param {String} key 键\n   */\n  removeItem (key) {\n    localStorage.removeItem(key);\n  },\n  /**\n   * 清空所有键值对\n   */\n  clear () {\n    localStorage.clear();\n  },\n  /**\n   * 遍历键值对\n   * @param {Function} callback 回调函数\n   * @param {Boolean} isJson 是否转换为 JSONObject 对象\n   */\n  each (callback, isJson) {\n    const keys = Object.keys(localStorage);\n\n    keys.forEach((e, i) => {\n      callback(e, this.getItem(e, isJson));\n    });\n  }\n};\n"]}]}