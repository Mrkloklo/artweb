{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gujiahao/Documents/work/github/artweb/src/components/verifycode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/components/verifycode.vue","mtime":1588230106537},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/vue-loader/lib/index.js","mtime":1585810053320}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\nexport default {\n  name: 'VerifyCode',\n  props: {\n    len: {\n      type: Number,\n      default: 4\n    },\n    minfontsize: {\n      type: Number,\n      default: 20\n    },\n    maxfontsize: {\n      type: Number,\n      default: 35\n    },\n    radius: {\n      type: Number,\n      default: 1\n    },\n    bgColor: {\n      type: String,\n      default: '#444'\n    },\n    colors: Array,\n    width: {\n      type: Number,\n      default: 130\n    },\n    height: {\n      type: Number,\n      default: 60\n    },\n    enableCaseValidation: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      verifyStr: ''\n    };\n  },\n  methods: {\n    update: function update() {\n      this._drawVerify();\n    },\n    validate: function validate(value) {\n      var verifyStr = this.verifyStr;\n\n      if (this.enableCaseValidation) {\n        return verifyStr === value;\n      }\n\n      return verifyStr.toLowerCase() === value.toLowerCase();\n    },\n\n    /**\n     * 生成随机数\n     * @param {Number} min 最小值\n     * @param {Number} max 最大值\n     * @returns {Number} 随机数\n     * @private\n     */\n    _randomNum: function _randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n\n    /**\n     * 生成一个随机色\n     * @param {Number} min 最小值\n     * @param {Number} max 最大值\n     * @returns {String} 颜色值\n     * @private\n     */\n    _randomColor: function _randomColor(min, max) {\n      var r = this._randomNum(min, max);\n\n      var g = this._randomNum(min, max);\n\n      var b = this._randomNum(min, max);\n\n      return \"rgb(\".concat(r, \",\").concat(g, \",\").concat(b, \")\");\n    },\n\n    /**\n     * 绘制验证码\n     */\n    _drawVerify: function _drawVerify() {\n      var canvas = this.$refs.canvas;\n      var ctx = canvas.getContext('2d');\n      var _randomNum = this._randomNum;\n      var _randomColor = this._randomColor;\n      var width = this.width;\n      var height = this.height;\n      var strLen = this.len;\n      var colors = this.colors;\n      ctx.textBaseline = 'middle';\n      this.verifyStr = ''; // 绘制背景色\n\n      ctx.fillStyle = this._randomColor(180, 240);\n      ctx.fillRect(0, 0, width, height); // 绘制文字\n\n      var str = 'ABCEFGHJKLMNPQRSTWXY123456789';\n\n      for (var i = 0; i < strLen; i++) {\n        var txt = str[_randomNum(0, str.length)];\n\n        if (colors && colors[i]) {\n          ctx.fillStyle = colors[i];\n        } else {\n          ctx.fillStyle = _randomColor(50, 160); // 随机生成字体颜色\n        }\n\n        ctx.font = \"\".concat(_randomNum(this.minfontsize, this.maxfontsize), \"px SimHei\"); // 随机生成字体大小\n\n        var x = width / strLen + i * 25;\n\n        var y = _randomNum(25, 45);\n\n        var deg = _randomNum(-45, 45);\n\n        this.verifyStr += txt; // 修改坐标原点和旋转角度\n\n        ctx.translate(x, y);\n        ctx.rotate(deg * Math.PI / 180);\n        ctx.fillText(txt, 0, 0); // 恢复坐标原点和旋转角度\n\n        ctx.rotate(-deg * Math.PI / 180);\n        ctx.translate(-x, -y);\n      } // 绘制干扰线\n\n\n      for (var _i = 0; _i < 8; _i++) {\n        ctx.strokeStyle = _randomColor(40, 180);\n        ctx.beginPath();\n        ctx.moveTo(_randomNum(0, width), _randomNum(0, height));\n        ctx.lineTo(_randomNum(0, width), _randomNum(0, height));\n        ctx.stroke();\n      } // 绘制干扰点\n\n\n      for (var _i2 = 0; _i2 < 100; _i2++) {\n        ctx.fillStyle = _randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(_randomNum(0, width), _randomNum(0, height), 1, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this._drawVerify();\n  }\n};",{"version":3,"sources":["verifycode.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <canvas :width=\"width\" :height=\"height\" :style=\"`border: 1px solid ${bgColor}`\" ref=\"canvas\"></canvas>\n</template>\n\n<script>\nexport default {\n  name: 'VerifyCode',\n  props: {\n    len: {\n      type: Number,\n      default: 4\n    },\n    minfontsize: {\n      type: Number,\n      default: 20\n    },\n    maxfontsize: {\n      type: Number,\n      default: 35\n    },\n    radius: {\n      type: Number,\n      default: 1\n    },\n    bgColor: {\n      type: String,\n      default: '#444'\n    },\n    colors: Array,\n    width: {\n      type: Number,\n      default: 130\n    },\n    height: {\n      type: Number,\n      default: 60\n    },\n    enableCaseValidation: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      verifyStr: ''\n    };\n  },\n  methods: {\n    update () {\n      this._drawVerify();\n    },\n    validate (value) {\n      const { verifyStr } = this;\n\n      if (this.enableCaseValidation) {\n        return verifyStr === value;\n      }\n\n      return verifyStr.toLowerCase() === value.toLowerCase();\n    },\n    /**\n     * 生成随机数\n     * @param {Number} min 最小值\n     * @param {Number} max 最大值\n     * @returns {Number} 随机数\n     * @private\n     */\n    _randomNum (min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    /**\n     * 生成一个随机色\n     * @param {Number} min 最小值\n     * @param {Number} max 最大值\n     * @returns {String} 颜色值\n     * @private\n     */\n    _randomColor (min, max) {\n      const r = this._randomNum(min, max);\n      const g = this._randomNum(min, max);\n      const b = this._randomNum(min, max);\n\n      return `rgb(${r},${g},${b})`;\n    },\n    /**\n     * 绘制验证码\n     */\n    _drawVerify () {\n      const { canvas } = this.$refs;\n      const ctx = canvas.getContext('2d');\n      const { _randomNum } = this;\n      const { _randomColor } = this;\n      const { width } = this;\n      const { height } = this;\n      const strLen = this.len;\n      const { colors } = this;\n\n      ctx.textBaseline = 'middle';\n      this.verifyStr = '';\n\n      // 绘制背景色\n      ctx.fillStyle = this._randomColor(180, 240);\n      ctx.fillRect(0, 0, width, height);\n\n      // 绘制文字\n      const str = 'ABCEFGHJKLMNPQRSTWXY123456789';\n\n      for (let i = 0; i < strLen; i++) {\n        const txt = str[_randomNum(0, str.length)];\n\n        if (colors && colors[i]) {\n          ctx.fillStyle = colors[i];\n        } else {\n          ctx.fillStyle = _randomColor(50, 160); // 随机生成字体颜色\n        }\n        ctx.font = `${_randomNum(this.minfontsize, this.maxfontsize)}px SimHei`; // 随机生成字体大小\n\n        const x = width / strLen + i * 25;\n        const y = _randomNum(25, 45);\n        const deg = _randomNum(-45, 45);\n\n        this.verifyStr += txt;\n        // 修改坐标原点和旋转角度\n        ctx.translate(x, y);\n        ctx.rotate(deg * Math.PI / 180);\n        ctx.fillText(txt, 0, 0);\n\n        // 恢复坐标原点和旋转角度\n        ctx.rotate(-deg * Math.PI / 180);\n        ctx.translate(-x, -y);\n      }\n\n      // 绘制干扰线\n      for (let i = 0; i < 8; i++) {\n        ctx.strokeStyle = _randomColor(40, 180);\n        ctx.beginPath();\n        ctx.moveTo(_randomNum(0, width), _randomNum(0, height));\n        ctx.lineTo(_randomNum(0, width), _randomNum(0, height));\n        ctx.stroke();\n      }\n\n      // 绘制干扰点\n      for (let i = 0; i < 100; i++) {\n        ctx.fillStyle = _randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(_randomNum(0, width), _randomNum(0, height), 1, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    }\n  },\n  mounted () {\n    this._drawVerify();\n  }\n};\n</script>\n"],"sourceRoot":"src/components"}]}