{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/thread-loader/dist/cjs.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/gujiahao/Documents/work/github/artweb/src/utils/storage.js","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/utils/storage.js","mtime":1588230106655},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/thread-loader/dist/cjs.js","mtime":1579587183081},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1579587173378}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _typeof from \"/Users/gujiahao/Documents/work/github/artweb/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\n\n/*\n * @Author: guotq\n * @Date: 2019-04-02 17:04:21\n * @Last Modified by: guotq\n * @Last Modified time: 2019-04-03 09:02:16\n * @Description: 移值 M7 框架中的 Util.storage\n */\nif (!('localStorage' in window)) {\n  throw new Error('你的浏览器不支持 storage api');\n}\n\nvar _window = window,\n    localStorage = _window.localStorage;\nexport default {\n  /**\n   * 存储键值对\n   * @param {String} key 键\n   * @param {String} value 值\n   * @returns {String} ''\n   */\n  setItem: function setItem(key, value) {\n    if (!key) {\n      return '';\n    }\n\n    if (_typeof(value) === 'object') {\n      value = JSON.stringify(value);\n    }\n\n    localStorage.setItem(key, value);\n  },\n\n  /**\n   * 读取键值对\n   * @param {String} key 键\n   * @param {Boolean} isJson 是否自动转为JSONObject对象\n   * @returns {Object} JSONOBJ\n   */\n  getItem: function getItem(key, isJson) {\n    var value = localStorage.getItem(key);\n    var result = value;\n\n    if (typeof result === 'string' && isJson) {\n      try {\n        result = JSON.parse(value);\n      } catch (_unused) {\n        result = value;\n      }\n    }\n\n    return result;\n  },\n\n  /**\n   * 移除键值对\n   * @param {String} key 键\n   */\n  removeItem: function removeItem(key) {\n    localStorage.removeItem(key);\n  },\n\n  /**\n   * 清空所有键值对\n   */\n  clear: function clear() {\n    localStorage.clear();\n  },\n\n  /**\n   * 遍历键值对\n   * @param {Function} callback 回调函数\n   * @param {Boolean} isJson 是否转换为 JSONObject 对象\n   */\n  each: function each(callback, isJson) {\n    var _this = this;\n\n    var keys = Object.keys(localStorage);\n    keys.forEach(function (e, i) {\n      callback(e, _this.getItem(e, isJson));\n    });\n  }\n};",null]}