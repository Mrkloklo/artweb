{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/thread-loader/dist/cjs.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/gujiahao/Documents/work/github/artweb/src/utils/index.js","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/utils/index.js","mtime":1588230106651},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/thread-loader/dist/cjs.js","mtime":1579587183081},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1579587173378}],"contextDependencies":[],"result":["import _typeof from \"/Users/gujiahao/Documents/work/github/artweb/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\n\n/*\n * @Description: In User Settings Edit\n * @Author: your name\n * @Date: 2019-07-29 11:12:17\n * @LastEditTime: 2019-08-09 14:29:33\n * @LastEditors: Please set LastEditors\n */\nimport { ajax, ajaxAll } from \"./request\";\nimport upload from \"./upload\";\nimport base64 from \"./base64\";\nimport charset from \"./charset\";\nimport date from \"./date\";\nimport imagescale from \"./imagescale\";\nimport math from \"./math\";\nimport sha1 from \"./sha1\";\nimport sha256 from \"./sha256\";\nimport storage from \"./storage\";\nimport string from \"./string\";\nimport Config from '@shared/config';\nvar ejsVer = Config.ejsVer;\n\nvar os = function () {\n  var _window$navigator = window.navigator,\n      userAgent = _window$navigator.userAgent,\n      appVersion = _window$navigator.appVersion;\n  var version = null;\n  var isBadAndroid = false;\n  var ios = false;\n\n  var android = function () {\n    var result = userAgent.match(/(Android);?[\\s/]+([\\d.]+)?/);\n\n    if (result) {\n      version = result[2];\n      isBadAndroid = !/Chrome\\/\\d/.test(appVersion);\n      return true;\n    }\n\n    return false;\n  }();\n\n  var iphone = function () {\n    var result = userAgent.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n\n    if (result) {\n      ios = true;\n      version = result[2].replace(/_/g, '.');\n      return true;\n    }\n\n    return false;\n  }();\n\n  var ipad = function () {\n    var result = userAgent.match(/(iPad).*OS\\s([\\d_]+)/);\n\n    if (result) {\n      ios = true;\n      version = result[2].replace(/_/g, '.');\n      return true;\n    }\n\n    return false;\n  }();\n\n  var ejs = function () {\n    return userAgent.match(/EpointEJS/i) || false;\n  }();\n\n  var dd = function () {\n    return userAgent.match(/DingTalk/i) || false;\n  }();\n\n  var h5 = function () {\n    return !ejs && !dd || false;\n  }();\n\n  return {\n    android: android,\n    version: version,\n    isBadAndroid: isBadAndroid,\n    ios: ios,\n    iphone: iphone,\n    ipad: ipad,\n    ejs: ejs,\n    dd: dd,\n    h5: h5\n  };\n}();\n/**\n * 打开页面\n * @param {String} url 要打开的地址\n */\n\n\nvar openPage = function openPage(url) {\n  var _window = window,\n      location = _window.location;\n  var pathname = location.pathname;\n  var openUrl = null;\n\n  if (typeof pathname === 'string') {\n    if (url.indexOf('http') !== -1) {\n      openUrl = url;\n    } else {\n      var pathArr = pathname.split('/');\n      pathArr.length -= 1;\n      openUrl = \"\".concat(location.protocol, \"//\").concat(location.host).concat(pathArr.join('/'), \"/\").concat(url);\n    }\n  }\n\n  if (os.ejs) {\n    ejsVer === 3 ? ejs.page.open(openUrl) : ejs.page.openPage(openUrl);\n  } else {\n    location.href = openUrl;\n  }\n};\n/**\n * 插入 Library 库\n * @param {Array} gather 集合\n * inject 插入位置\n * src 路径\n * type 类型\n * @return {Promise} Promise event\n */\n\n\nvar loaderLibrary = function loaderLibrary() {\n  var promiseAssembly = [];\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  args.forEach(function (e) {\n    var inject = e.inject;\n    var src = e.src;\n    var type = e.type;\n    var el = null;\n    var promise = new Promise(function (resolve) {\n      if (type === 'css') {\n        el = document.createElement('link');\n        el.link = src;\n        el.ref = 'stylesheet';\n      } else {\n        el = document.createElement('script');\n        el.src = src;\n      }\n\n      if (inject === 'head') {\n        document.head.appendChild(el);\n      } else {\n        document.body.appendChild(el);\n      }\n\n      el.onload = function () {\n        resolve();\n      };\n    });\n    promiseAssembly.push(promise);\n  });\n  return Promise.all(promiseAssembly);\n};\n\nvar extend = function extend() {\n  return Object.assign.apply(Object, arguments);\n};\n\nvar uuid = function uuid(options) {\n  options = options || {};\n  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n  var uuid = [];\n  var i;\n  var radix = options.radix || chars.length;\n  var len = options.len || 32;\n  var type = options.type || 'default';\n  len = Math.min(len, 36);\n  len = Math.max(len, 4);\n  radix = Math.min(radix, 62);\n  radix = Math.max(radix, 2);\n\n  if (len) {\n    for (i = 0; i < len; i++) {\n      uuid[i] = chars[0 | Math.random() * radix];\n    }\n\n    if (type === 'default') {\n      len > 23 && (uuid[23] = '-');\n      len > 18 && (uuid[18] = '-');\n      len > 13 && (uuid[13] = '-');\n      len > 8 && (uuid[8] = '-');\n    }\n  }\n\n  return uuid.join('');\n};\n/**\n * 从 URL 截取参数\n * @param {String} key 关键字\n * @returns {String} 返回参数\n */\n\n\nvar getExtraDataByKey = function getExtraDataByKey(key) {\n  var uri = decodeURIComponent(window.location.href);\n  var regExp = new RegExp(\"\\\\??\".concat(key, \"=([^&]*)\"));\n  var result = uri.match(regExp);\n  return Array.isArray(result) && result[1] || '';\n};\n/**\n * 数据处理\n * @param {Object} response 处理数据\n * @param {Object} options 配置项\n * @returns {Boolean} data or true\n */\n\n\nvar dataProcess = function dataProcess(response, options) {\n  if (_typeof(response) !== 'object') {\n    console.error(\"response\\u7684\\u7C7B\\u578B\\u4E3A \".concat(_typeof(response)));\n    return false;\n  }\n\n  var dataPath = options.dataPath;\n  var data = null;\n\n  var handler = function handler(pathAssembly) {\n    var result = null;\n    pathAssembly.forEach(function (path, index) {\n      var resolvePathData = result ? result[path] : response[path];\n\n      if (resolvePathData) {\n        result = resolvePathData;\n      } else if (index === pathAssembly.length - 1) {\n        result = undefined;\n      }\n    });\n    return result;\n  };\n\n  if (dataPath) {\n    if (Array.isArray(dataPath)) {\n      dataPath.forEach(function (e) {\n        data = handler(e.split('.'));\n      });\n      return data;\n    } else {\n      return handler(dataPath.split('.'));\n    }\n  }\n\n  return undefined;\n};\n/**\n * 判断值是否为空\n * @param {String} value 值\n * @returns {Boolean} 验证结果\n */\n\n\nvar isNull = function isNull(value) {\n  return value === null || value === undefined;\n};\n/**\n * 遍历对象或数组\n * @param {Object} arr 对象和数组\n * @param {Function} callback 回调函数\n */\n\n\nvar each = function each(arr, callback) {\n  callback = typeof callback === 'function' ? callback : function () {};\n\n  if (_typeof(arr) === 'object') {\n    for (var i = 0, len = arr.length; i < len; i++) {\n      var item = arr[i];\n      callback(i, item);\n    }\n  }\n};\n\nexport default {\n  openPage: openPage,\n  ajax: ajax,\n  ajaxAll: ajaxAll,\n  extend: extend,\n  uuid: uuid,\n  getExtraDataByKey: getExtraDataByKey,\n  os: os,\n  dataProcess: dataProcess,\n  loaderLibrary: loaderLibrary,\n  isNull: isNull,\n  base64: base64,\n  charset: charset,\n  date: date,\n  imagescale: imagescale,\n  math: math,\n  sha1: sha1,\n  sha256: sha256,\n  storage: storage,\n  string: string,\n  each: each,\n  upload: upload\n};",null]}