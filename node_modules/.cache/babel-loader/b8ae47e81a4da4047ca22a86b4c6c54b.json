{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/eslint-loader/index.js??ref--13-0!/Users/gujiahao/Documents/work/github/artweb/src/components/fileinput.js","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/components/fileinput.js","mtime":1588230106487},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _classCallCheck from \"/Users/gujiahao/Documents/work/github/artweb/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gujiahao/Documents/work/github/artweb/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\n/*\n * @Author: guotq\n * @Date: 2019-04-02 17:04:21\n * @Last Modified by: guotq\n * @Last Modified time: 2019-04-03 09:02:16\n * @Description: FileInput 选择文件上传\n */\nvar defaultSetting = {\n  isMulti: false,\n  type: '',\n  accept: ''\n};\n\nvar FileInput = /*#__PURE__*/function () {\n  function FileInput(options) {\n    _classCallCheck(this, FileInput);\n\n    this.options = Object.assign(defaultSetting, options || {});\n\n    this.errorCallback = function () {};\n\n    this._createInput();\n  }\n\n  _createClass(FileInput, [{\n    key: \"_createInput\",\n    value: function _createInput() {\n      var options = this.options;\n      var type;\n      var el = document.createElement('input');\n      var df = document.createDocumentFragment();\n      var filter = '';\n      var ejsEnv = false;\n      el.type = 'file';\n\n      if (options.isMulti) {\n        el.multiple = true;\n      }\n\n      switch (options.type) {\n        case 'Text':\n          filter = ejsEnv ? 'text/*' : 'file/*';\n          type = 'Text';\n          break;\n\n        case 'File':\n          filter = ejsEnv ? 'file/*' : '*';\n          type = 'DataUrl';\n          break;\n\n        case 'Image':\n          filter = 'image/*';\n          type = 'DataUrl';\n          break;\n\n        case 'Camera_File':\n          filter = ejsEnv ? 'camera_file/*' : '*';\n          type = 'DataUrl';\n          break;\n\n        case 'Image_File':\n          filter = ejsEnv ? 'image_file/*' : '*';\n          type = 'DataUrl';\n          break;\n\n        case 'Image_Camera':\n          filter = ejsEnv ? 'image_camera/*' : 'image/*';\n          type = 'DataUrl';\n          break;\n\n        case 'Camera':\n          filter = ejsEnv ? 'camera/*' : 'image/*';\n          type = 'DataUrl';\n          break;\n\n        case 'All':\n          filter = ejsEnv ? '*/*' : '*';\n          type = 'DataUrl';\n          break;\n\n        default:\n          filter = '*';\n          type = 'File';\n      }\n\n      el.accept = options.accept || filter;\n      this.el = el;\n      this.dataType = type;\n      df.appendChild(el);\n    }\n  }, {\n    key: \"triggerClick\",\n    value: function triggerClick() {\n      this.el.click();\n    }\n    /**\n     * 监听对应事件\n     * @param {String} event 事件名\n     * @param {Function} callback 回调函数\n     */\n\n  }, {\n    key: \"on\",\n    value: function on() {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'change';\n      var callback = arguments.length > 1 ? arguments[1] : undefined;\n      var loadFormData = this.loadFormData;\n      var dataType = this.dataType;\n      var that = this;\n\n      if (event === 'error') {\n        this.errorCallback = typeof callback === 'function' ? callback : this.errorCallback;\n      }\n\n      if (event === 'change') {\n        this.el.onchange = function () {\n          loadFormData(this.files, dataType).then(function (result) {\n            if (callback && typeof callback === 'function') {\n              callback(result);\n            }\n          }).catch(function (error) {\n            that.errorCallback(error);\n          });\n        };\n      }\n    }\n    /**\n     * 根据type解析FORMDATA\n     * @param {Blob} files 文件对象\n     * @param {String} dataType 返回文件类型\n     * @returns {Promise} 事件 event\n     */\n\n  }, {\n    key: \"loadFormData\",\n    value: function loadFormData(files, dataType) {\n      var i = 0;\n      var promiseQueue = [];\n\n      var _loop = function _loop() {\n        var file = files[i];\n        var fileReader = new FileReader();\n\n        if (dataType === 'DataUrl') {\n          fileReader.readAsDataURL(file);\n        } else if (dataType === 'Text') {\n          fileReader.readAsText(file);\n        } else {\n          fileReader.readAsBinaryString(file);\n        }\n\n        var p = new Promise(function (resolve, reject) {\n          fileReader.onload = function (e) {\n            var result = e.target.result;\n\n            if (dataType === 'DataUrl') {\n              if (result.indexOf('data:base64,') !== -1) {\n                var filename = file.name.toLowerCase();\n                var base64Type = 'image/jpeg';\n\n                if (filename.lastIndexOf('jpg') !== -1) {\n                  base64Type = 'image/jpeg';\n                } else if (filename.lastIndexOf('.png') !== -1) {\n                  base64Type = 'image/png';\n                } else if (filename.lastIndexOf('gif') !== -1) {\n                  base64Type = 'image/gif';\n                } else if (filename.lastIndexOf('icon') !== -1) {\n                  base64Type = 'image/x-icon';\n                }\n\n                result = result.replace('data:base64,', '');\n                result = \"data:\".concat(base64Type, \";base64,\").concat(result);\n              }\n            }\n\n            resolve({\n              value: result,\n              file: file\n            });\n          };\n\n          fileReader.onerror = function (event) {\n            reject(event);\n          };\n        });\n        promiseQueue.push(p);\n        i++;\n      };\n\n      while (i < files.length) {\n        _loop();\n      }\n\n      return Promise.all(promiseQueue);\n    }\n  }]);\n\n  return FileInput;\n}();\n\nexport default FileInput;",{"version":3,"sources":["/Users/gujiahao/Documents/work/github/artweb/src/components/fileinput.js"],"names":["defaultSetting","isMulti","type","accept","FileInput","options","Object","assign","errorCallback","_createInput","el","document","createElement","df","createDocumentFragment","filter","ejsEnv","multiple","dataType","appendChild","click","event","callback","loadFormData","that","onchange","files","then","result","catch","error","i","promiseQueue","file","fileReader","FileReader","readAsDataURL","readAsText","readAsBinaryString","p","Promise","resolve","reject","onload","e","target","indexOf","filename","name","toLowerCase","base64Type","lastIndexOf","replace","value","onerror","push","length","all"],"mappings":"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","sourcesContent":["/*\n * @Author: guotq\n * @Date: 2019-04-02 17:04:21\n * @Last Modified by: guotq\n * @Last Modified time: 2019-04-03 09:02:16\n * @Description: FileInput 选择文件上传\n */\n\nconst defaultSetting = {\n  isMulti: false,\n  type: '',\n  accept: ''\n};\n\nclass FileInput {\n  constructor (options) {\n    this.options = Object.assign(defaultSetting, options || {});\n    this.errorCallback = () => {};\n    this._createInput();\n  }\n\n  _createInput () {\n    const { options } = this;\n    let type;\n    const el = document.createElement('input');\n    const df = document.createDocumentFragment();\n    let filter = '';\n    const ejsEnv = false;\n\n    el.type = 'file';\n\n    if (options.isMulti) {\n      el.multiple = true;\n    }\n\n    switch (options.type) {\n      case 'Text':\n        filter = ejsEnv ? 'text/*' : 'file/*';\n        type = 'Text';\n        break;\n\n      case 'File':\n        filter = ejsEnv ? 'file/*' : '*';\n        type = 'DataUrl';\n        break;\n\n      case 'Image':\n        filter = 'image/*';\n        type = 'DataUrl';\n        break;\n\n      case 'Camera_File':\n        filter = ejsEnv ? 'camera_file/*' : '*';\n        type = 'DataUrl';\n        break;\n\n      case 'Image_File':\n        filter = ejsEnv ? 'image_file/*' : '*';\n        type = 'DataUrl';\n        break;\n\n      case 'Image_Camera':\n        filter = ejsEnv ? 'image_camera/*' : 'image/*';\n        type = 'DataUrl';\n        break;\n\n      case 'Camera':\n        filter = ejsEnv ? 'camera/*' : 'image/*';\n        type = 'DataUrl';\n        break;\n\n      case 'All':\n        filter = ejsEnv ? '*/*' : '*';\n        type = 'DataUrl';\n        break;\n\n      default:\n        filter = '*';\n        type = 'File';\n    }\n\n    el.accept = options.accept || filter;\n    this.el = el;\n    this.dataType = type;\n    df.appendChild(el);\n  }\n\n  triggerClick () {\n    this.el.click();\n  }\n\n  /**\n   * 监听对应事件\n   * @param {String} event 事件名\n   * @param {Function} callback 回调函数\n   */\n  on (event = 'change', callback) {\n    const { loadFormData } = this;\n    const { dataType } = this;\n    const that = this;\n\n    if (event === 'error') {\n      this.errorCallback = typeof callback === 'function' ? callback : this.errorCallback;\n    }\n\n    if (event === 'change') {\n      this.el.onchange = function () {\n        loadFormData(this.files, dataType)\n          .then((result) => {\n            if (callback && typeof callback === 'function') {\n              callback(result);\n            }\n          })\n          .catch((error) => {\n            that.errorCallback(error);\n          });\n      };\n    }\n  }\n\n  /**\n   * 根据type解析FORMDATA\n   * @param {Blob} files 文件对象\n   * @param {String} dataType 返回文件类型\n   * @returns {Promise} 事件 event\n   */\n  loadFormData (files, dataType) {\n    let i = 0;\n    const promiseQueue = [];\n\n    while (i < files.length) {\n      const file = files[i];\n      const fileReader = new FileReader();\n\n      if (dataType === 'DataUrl') {\n        fileReader.readAsDataURL(file);\n      } else if (dataType === 'Text') {\n        fileReader.readAsText(file);\n      } else {\n        fileReader.readAsBinaryString(file);\n      }\n\n      const p = new Promise((resolve, reject) => {\n        fileReader.onload = function (e) {\n          let { result } = e.target;\n\n          if (dataType === 'DataUrl') {\n            if (result.indexOf('data:base64,') !== -1) {\n              const filename = file.name.toLowerCase();\n              let base64Type = 'image/jpeg';\n\n              if (filename.lastIndexOf('jpg') !== -1) {\n                base64Type = 'image/jpeg';\n              } else if (filename.lastIndexOf('.png') !== -1) {\n                base64Type = 'image/png';\n              } else if (filename.lastIndexOf('gif') !== -1) {\n                base64Type = 'image/gif';\n              } else if (filename.lastIndexOf('icon') !== -1) {\n                base64Type = 'image/x-icon';\n              }\n\n              result = result.replace('data:base64,', '');\n              result = `data:${base64Type};base64,${result}`;\n            }\n          }\n\n          resolve({\n            value: result,\n            file\n          });\n        };\n        fileReader.onerror = function (event) {\n          reject(event);\n        };\n      });\n\n      promiseQueue.push(p);\n      i++;\n    }\n\n    return Promise.all(promiseQueue);\n  }\n}\n\nexport default FileInput;\n"]}]}