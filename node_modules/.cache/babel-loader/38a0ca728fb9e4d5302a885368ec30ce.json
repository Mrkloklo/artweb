{"remainingRequest":"/Users/gujiahao/Documents/work/github/artweb/node_modules/thread-loader/dist/cjs.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js!/Users/gujiahao/Documents/work/github/artweb/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/gujiahao/Documents/work/github/artweb/src/utils/sha256.js","dependencies":[{"path":"/Users/gujiahao/Documents/work/github/artweb/src/utils/sha256.js","mtime":1588230106654},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/cache-loader/dist/cjs.js","mtime":1579587180818},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/thread-loader/dist/cjs.js","mtime":1579587183081},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/babel-loader/lib/index.js","mtime":1585810045725},{"path":"/Users/gujiahao/Documents/work/github/artweb/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1579587173378}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n\n/*\n * @Author: guotq\n * @Date: 2019-04-02 17:04:21\n * @Last Modified by: guotq\n * @Last Modified time: 2019-04-03 09:02:16\n * @Description: 移值 M7 框架中的 Util.sha256\n */\nvar hexcase = 0;\nvar chrsz = 8;\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xFFFF;\n}\n\nfunction S(X, n) {\n  return X >>> n | X << 32 - n;\n}\n\nfunction R(X, n) {\n  return X >>> n;\n}\n\nfunction Ch(x, y, z) {\n  return x & y ^ ~x & z;\n}\n\nfunction Maj(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n}\n\nfunction Sigma0256(x) {\n  return S(x, 2) ^ S(x, 13) ^ S(x, 22);\n}\n\nfunction Sigma1256(x) {\n  return S(x, 6) ^ S(x, 11) ^ S(x, 25);\n}\n\nfunction Gamma0256(x) {\n  return S(x, 7) ^ S(x, 18) ^ R(x, 3);\n}\n\nfunction Gamma1256(x) {\n  return S(x, 17) ^ S(x, 19) ^ R(x, 10);\n}\n\nfunction coreSha256(m, l) {\n  var K = [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2];\n  var HASH = [0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19];\n  var W = new Array(64);\n  var a;\n  var b;\n  var c;\n  var d;\n  var e;\n  var f;\n  var g;\n  var h;\n  var T1;\n  var T2;\n  m[l >> 5] |= 0x80 << 24 - l % 32;\n  m[(l + 64 >> 9 << 4) + 15] = l;\n\n  for (var i = 0; i < m.length; i += 16) {\n    a = HASH[0];\n    b = HASH[1];\n    c = HASH[2];\n    d = HASH[3];\n    e = HASH[4];\n    f = HASH[5];\n    g = HASH[6];\n    h = HASH[7];\n\n    for (var j = 0; j < 64; j++) {\n      if (j < 16) {\n        W[j] = m[j + i];\n      } else {\n        W[j] = safeAdd(safeAdd(safeAdd(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);\n      }\n\n      T1 = safeAdd(safeAdd(safeAdd(safeAdd(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);\n      T2 = safeAdd(Sigma0256(a), Maj(a, b, c));\n      h = g;\n      g = f;\n      f = e;\n      e = safeAdd(d, T1);\n      d = c;\n      c = b;\n      b = a;\n      a = safeAdd(T1, T2);\n    }\n\n    HASH[0] = safeAdd(a, HASH[0]);\n    HASH[1] = safeAdd(b, HASH[1]);\n    HASH[2] = safeAdd(c, HASH[2]);\n    HASH[3] = safeAdd(d, HASH[3]);\n    HASH[4] = safeAdd(e, HASH[4]);\n    HASH[5] = safeAdd(f, HASH[5]);\n    HASH[6] = safeAdd(g, HASH[6]);\n    HASH[7] = safeAdd(h, HASH[7]);\n  }\n\n  return HASH;\n}\n\nfunction str2binb(str) {\n  var bin = [];\n  var mask = (1 << chrsz) - 1;\n\n  for (var i = 0; i < str.length * chrsz; i += chrsz) {\n    bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << 24 - i % 32;\n  }\n\n  return bin;\n}\n\nfunction Utf8Encode(string) {\n  string = string.replace(/\\r\\n/g, '\\n');\n  var utftext = '';\n\n  for (var n = 0; n < string.length; n++) {\n    var c = string.charCodeAt(n);\n\n    if (c < 128) {\n      utftext += String.fromCharCode(c);\n    } else if (c > 127 && c < 2048) {\n      utftext += String.fromCharCode(c >> 6 | 192);\n      utftext += String.fromCharCode(c & 63 | 128);\n    } else {\n      utftext += String.fromCharCode(c >> 12 | 224);\n      utftext += String.fromCharCode(c >> 6 & 63 | 128);\n      utftext += String.fromCharCode(c & 63 | 128);\n    }\n  }\n\n  return utftext;\n}\n\nfunction binb2hex(binarray) {\n  var hexTab = hexcase ? '0123456789ABCDEF' : '0123456789abcdef';\n  var str = '';\n\n  for (var i = 0; i < binarray.length * 4; i++) {\n    str += hexTab.charAt(binarray[i >> 2] >> (3 - i % 4) * 8 + 4 & 0xF) + hexTab.charAt(binarray[i >> 2] >> (3 - i % 4) * 8 & 0xF);\n  }\n\n  return str;\n}\n\nexport default {\n  /**\n   * hex散列，16进制字符串形式\n   * @param {String} s 内容\n   * @return {String} 返回密文,hex字符串\n   */\n  hex: function hex(s) {\n    s = Utf8Encode(s);\n    return binb2hex(coreSha256(str2binb(s), s.length * chrsz));\n  }\n};",null]}